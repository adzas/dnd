{"version":3,"sources":["basic/battlefield-storage.js","helpers/random-helper.js","enemy-generators/alsariph-generator.js","enemy-generators/bandit-captain-generator.js","enemy-generators/bandit-generator.js","enemy-generators/hum-generator.js","enemy-generators/kreatura-generator.js","enemy-generators/omalen-generator.js","basic/die-roll.js","basic/enemy.js","enemy-type/bandit.js","enemy-type/bandit-captain.js","enemy-type/Player.js","enemy-generators/dwarf-generator.js","enemy-type/dwarf.js","enemy-generators/scout-bandit-generator.js","enemy-type/scout-bandit.js","enemy-generators/wood-golem-generator.js","enemy-type/wood-golem.js","enemy-generators/dog-generator.js","enemy-type/dog.js","enemy-generators/goblin-generator.js","enemy-type/goblin.js","enemy-generators/hobgoblin-generator.js","enemy-type/hobgoblin.js","enemy-generators/gnoll-generator.js","enemy-type/gnoll.js","enemy-generators/gnoll-pack-lord-generator.js","enemy-type/gnoll-pack-lord.js","enemy-generators/shadow-generator.js","enemy-type/shadow.js","enemy-generators/thug-generator.js","enemy-type/thug.js","enemy-generators/dwarf-extra-generator.js","enemy-type/dwarf-extra.js","enemy-generators/darkling-generator.js","enemy-type/darkling.js","enemy-generators/barbarian-generator.js","enemy-type/barbarian.js","enemy-generators/anyone-generator.js","enemy-type/anyone.js","enemy-generators/dire-wolf-generator.js","enemy-type/dire-wolf.js","enemy-generators/hobgoblin-captain-generator.js","enemy-type/hobgoblin-captain.js","enemy-generators/rot-monster-generator.js","enemy-type/rot-monster.js","enemy-generators/hill-giant-generator.js","enemy-type/hill-giant.js","enemy-generators/guard-generator.js","enemy-type/guard.js","enemy-generators/black-pudding-generator.js","enemy-type/black-pudding.js","enemy-generators/ruster-generator.js","enemy-type/ruster.js","helpers/enemy-helper.js","BattlefieldElementList.js","helpers/constHelper.js","Battle.js","Logo.js","Home.js","BackToHome.js","EnemyList.js","PlayerList.js","STCounter.js","PreparingToBattle.js","Rules.js","Settings.js","App.js","reportWebVitals.js","index.js"],"names":["BattlefieldStorage","_classCallCheck","this","currentGameStorage","gameProcess","players","_createClass","key","value","obj","bfStorage","currentBfStorage","get","isPlayer","includes","type","lp","id","parseInt","length","newBfStorage","reindexContent","counterLpEnemys","getEnemyCounter","label","saveAll","JSON","parse","localStorage","getItem","st","content","k","statistics","xp","clear","element_id","new_content","new_first_element","getElementById","i","reindex_content","console","log","target","clearBFStorage","new_indexint_content","sort","sortById","a","b","initiative","data","setItem","stringify","new_contetnt","objects","plus","arguments","undefined","from","filter","stored","counter","savedSets","loadGameSet","forEach","elem","concat","name","saveGameSet","firstGameSet","secondGameSet","saveGameSettingsInLocalStorage","saveGameSettings","bfContent","newBfContent","sortByIni","maxID","e","hp","minID","RandomHelper","min","max","results","Math","floor","random","die","getRandom","getRandomValueFromData","x","AlsariphGenerator","_RandomHelper","_inherits","_super","_createSuper","apply","customInitiative","actions","kp","currentHp","pp","strength","dexterity","condition","intelligence","wisdom","charisma","speed","BanditCaptainGenerator","BanditGenerator","HumGenerator","KreaturaGenerator","OmalenGenerator","DieRoll","attackMethod","t1","t2","html","Enemy","app","_this","call","attackType","str","dex","isCrit","informations","round","shortInfo","getIdBaseElementDom","renderHpBar","percentHP","w3color","style","getLP","getMyCssClass","renderHeader","hpChangeButton","renderActions","renderInformation","renderAction","enemyHelper","EnemyHelper","appClass","getAttackName","method","result","getAttackFunction","test","dieResult","dmg","text","Bandit","_Enemy","getTestResult","generateDmg","BanditCaptain","Player","_get","_getPrototypeOf","prototype","replace","returnHtmlActions","DwarfGenerator","Dwarf","ScoutBanditGenerator","ScoutBandit","WoodGolemGenerator","WoodGolem","roll","DogGenerator","Dog","GoblinGenerator","Goblin","HobgoblinGenerator","Hobgoblin","GnollGenerator","Gnoll","GnollPackLordGenerator","GnollPackLord","ShadowGenerator","Shadow","split","ThugGenerator","Thug","DwarfExtraGenerator","DwarfExtra","DarklingGenerator","Darkling","BarbarianGenerator","Barbarian","AnyoneGenerator","Anyone","bonus","DireWolfGenerator","DireWolf","HobgoblinCaptainGenerator","HobgoblinCaptain","RotMonsterGenerator","RotMonster","HillGiantGenerator","HillGiant","GuardGenerator","Guard","BlackPuddingGenerator","BlackPudding","RusterGenerator","Ruster","_regeneratorRuntime","t","r","Object","n","hasOwnProperty","o","defineProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","pathToConfigFile","enemyType","getClassObjectKindByTypeEnemy","getRandomObject","requestKind","object","classObjectReturned","alert","getAttackDataFromConfigFile","function","_getAttackDataFromConfigFile","_asyncToGenerator","_callee","response","attackName","attackFunction","_context","fetch","ok","status","json","attack","t0","error","_x","collapseTarget","document","getAttribute","BattlefieldElementList","props","enemyObiect","_useState","useState","_useState2","_slicedToArray","actionClass","setActionClass","_useState3","_useState4","myStyle","setMyStyle","_useState5","opacity","_useState6","myStyleAction","setMyStyleAction","_useState7","_useState8","eClass","setEClass","useEffect","orderId","backgroundColor","height","React","createElement","className","onClick","setTimeout","map","action","nextElement","ConstHelper","window","innerWidth","Battle","currElID","setOrderId","width","getWidthApp","activeStep","left","battlefield","getLastActiveID","getFirstActiveID","changeVisible","item","color","Logo","src","alt","heigth","Home","BackToHome","EnemyList","jsonData","setJsonData","enemiesGroups","setEnemiesGroups","axios","process","enemiesContentGroup","group","index","enemyElement","k2","btnClass","data-type","add","EXP","Fragment","PlayerList","setCustomInit","fontSize","placeholder","step","onKeyUp","display","gridTemplateColumns","padding","player","playerCode","STCounter","playersCount","enemyCounter","expSummary","enemyList","ST","setST","enemySpecular","setEnemySpecular","actualST","rangeEasy","refreshEnemList","PreparingToBattle","playerList","getST","EXPcounter","setEXPCounter","selectedEnemies","setSelectedEnemies","enemyCount","setEnemyCount","addEnemy","enemy","prevCounter","newEnemy","getRandomEnemyObjectByType","store","setSelectedEnemyList","selectedEnemy","currentSelected","battleList","currElemID","sortByInitiative","getGameProcess","setGameProcess","currentElementID","setBattlefield","Rules","setContent","rule1Class","set1Class","rule2Class","set2Class","_useState9","_useState10","rule3Class","set3Class","_useState11","_useState12","rule4Class","set4Class","_useState13","_useState14","rule5Class","set5Class","_useState15","_useState16","rule6Class","set6Class","_useState17","_useState18","rule7Class","set7Class","_useState19","_useState20","rule8Class","set8Class","changeRule","title","margin","gridTemplateRows","Settings","App","_Component","setVisibleStep","state","possibleSteps","visibleStep","setState","setBattlefieldContent","battlefieldContent","minHeight","getHeightApp","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.b5b3ad29.chunk.js","sourcesContent":["\nexport default class BattlefieldStorage {\n    currentGameStorage = 'gameStorage';\n    gameProcess = 'gameProcess';\n    players = ['alsariph', 'omalen', 'hum', 'kreatura'];\n    store(obj) {\n        let bfStorage = [];\n        const currentBfStorage = this.get();\n        const isPlayer = this.players.includes(obj.type);\n        obj.lp = 0;\n        if (null === currentBfStorage) {\n            obj.id = 1;\n            bfStorage[0] = obj;\n        } else {\n            obj.id = parseInt(currentBfStorage.length+1);\n            bfStorage = currentBfStorage;\n            bfStorage[currentBfStorage.length] = obj;\n        }\n        const newBfStorage = this.reindexContent(bfStorage);\n        const counterLpEnemys = this.getEnemyCounter(newBfStorage);\n        if (!isPlayer) {\n            obj.lp = counterLpEnemys;\n        }\n        obj.label = '---';\n        this.saveAll(newBfStorage);\n    };\n    get() {\n        const getStorageFB = JSON.parse(localStorage.getItem(this.currentGameStorage));\n\n        return getStorageFB;\n    };\n    getST() {\n        let st = 0;\n        let content = this.get();\n        for (let k in content) {\n            if (!this.players.includes(content[k].type)) {\n                st += content[k].statistics.xp;\n            }\n        }\n\n        return st;\n    };\n    clearBFStorage() {\n        this.saveAll(null);\n    };\n    clearLocalStorage() {\n        localStorage.clear();\n    };\n    moveUp(element_id) {\n        let new_content = [];\n        if (1 === parseInt(element_id)) {\n            const content = this.get();\n            let new_first_element = this.getElementById(element_id, content);\n            new_first_element.id = 0;\n            new_content[0] = new_first_element;\n            let i = 1;\n            const reindex_content = this.reindexContent(content, 1);\n            for(let k in reindex_content) {\n                if (parseInt(new_first_element.id) === parseInt(reindex_content[k].id)) {\n                    console.log('pomiń: ');\n                    console.log(reindex_content[k]);\n                } else {\n                    new_content[i++] = reindex_content[k];\n                }\n            }\n        } else if (1 < parseInt(element_id)) {\n            const content = this.get();\n            const target = this.getElementById(element_id, content);\n            let i = 0;\n            for(let k in content) {\n                if (parseInt(target.id) === parseInt(content[k].id)) {\n                    console.log('pomiń: ');\n                    console.log(content[k]);\n                } else {\n                    if (parseInt(content[k].id) === parseInt(target.id-1)) {\n                        new_content[i++] = target;\n                    }\n                    new_content[i++] = content[k];\n                }\n            }\n        }\n        if (0 < new_content.length) {\n            this.clearBFStorage();\n            let new_indexint_content = this.reindexContent(new_content);\n            new_indexint_content.sort(this.sortById);\n            this.saveAll(new_indexint_content);\n        }\n    };\n    sortById (a, b) {\n        if ( a.id < b.id ){\n          return -1;\n        }\n        if ( a.id > b.id ){\n          return 1;\n        }\n        return 0;\n    };\n    sortByIni(a, b) {\n        if ( a.statistics.initiative < b.statistics.initiative ){\n          return 1;\n        }\n        if ( a.statistics.initiative > b.statistics.initiative ){\n          return -1;\n        }\n        return 0;\n    };\n    saveAll(data) {\n        localStorage.setItem(this.currentGameStorage, JSON.stringify(data));\n    };\n    deleteElement(id) {\n        const content = this.get();\n        this.clearBFStorage();\n        let new_contetnt = [];\n        let i = 0;\n        for (let k in content) {\n            if (parseInt(id) !== parseInt(content[k].id)) {\n                new_contetnt[i++] = content[k];\n            }\n        }\n        this.saveAll(this.reindexContent(new_contetnt));\n    }\n    reindexContent(objects, plus = 0) {\n        let content = [];\n        for (let k in objects) {\n            objects[k].id = parseInt(k) + parseInt(plus);\n            content[k] = objects[k];\n        }\n        return content;\n    };\n    getElementById(id, from) {\n        const target = from.filter(obj => {\n            return obj.id === id;\n        });\n        return target[0];\n    };\n    storeLabelElementValue(id, value) {\n        let stored = false;\n        let content = this.get();\n        this.clearBFStorage();\n        for (let k in content) {\n            if (parseInt(id) === parseInt(content[k].id)) {\n                content[k].label = value;\n                stored = true;\n            }\n        }\n        this.saveAll(this.reindexContent(content));\n\n        return stored;\n    };\n    getEnemyCounter(data) {\n        let counter = 0;\n        for (let i in data) {\n            if (!this.players.includes(data[i].type)) {\n                counter++;\n            }\n        }\n        return counter;\n    };\n    previewGameSet(key) {\n        const savedSets = this.loadGameSet(key);\n        console.log('savedSets', savedSets);\n\n        let content = '';\n        savedSets.forEach(elem => {\n            console.log('elem', elem);\n            content += `${elem.name}: ${elem.label}</br>`;\n        });\n\n        return content;\n    };\n    saveSettings(key) {\n        const currentGameStorage = JSON.parse(localStorage.getItem(this.currentGameStorage));\n        this.saveGameSet(key, currentGameStorage);\n\n        return 'Zapisano set '+key;\n    };\n    loadSettings(key) {\n        const savedSets = this.loadGameSet(key);\n        this.saveAll(savedSets);\n    };\n    loadGameSet(key) {\n        if (1 === key) {\n            return JSON.parse(localStorage.getItem(this.firstGameSet));\n        } else {\n            return JSON.parse(localStorage.getItem(this.secondGameSet));\n        }\n    };\n    saveGameSet(key, data) {\n        if (1 === key) {\n            this.saveGameSettingsInLocalStorage(this.firstGameSet, data);\n        } else {\n            this.saveGameSettingsInLocalStorage(this.secondGameSet, data);\n        }\n    };\n    saveSecondGameSet(data) {\n        this.saveGameSettings(this.secondGameSet, data);\n    };\n    saveGameSettingsInLocalStorage(key, data) {\n        localStorage.setItem(key, JSON.stringify(data));\n    };\n\n    /** function by client */\n    sortByInitiative() {\n        let bfContent = this.get();\n        this.clearBFStorage();\n        let newBfContent = bfContent.sort(this.sortByIni);\n        this.saveAll(newBfContent);\n    }\n    getGameProcess() {\n        return JSON.parse(localStorage.getItem(this.gameProcess));\n    }\n    setGameProcess(data) {\n        localStorage.setItem(this.gameProcess, JSON.stringify(data));\n    }\n    getLastActiveID() {\n        let maxID = 0;\n        let bfContent = this.get();\n        if (null === bfContent) {\n            return null;\n        }\n        const newBfContent = bfContent.sort(this.sortById);\n        newBfContent.forEach(e => {\n            if (0 < e.statistics.hp) {\n                if (e.id > maxID) {\n                    maxID = e.id;\n                }\n            }\n        });\n        \n        return maxID;\n    }\n    getFirstActiveID() {\n        let minID = 0;\n        let bfContent = this.get();\n        if (null === bfContent) {\n            return null;\n        }\n        const newBfContent = bfContent.sort(this.sortById);\n        newBfContent.forEach(e => {\n            if (0 < e.statistics.hp) {\n                if (e.id < minID) {\n                    minID = e.id;\n                }\n            }\n        });\n        \n        return minID;\n    }\n}\n","\nexport default class RandomHelper {\n    getRandom(min, max) {\n        let results = [];\n        let k = 0;\n        for (let i=min; i<=max; i++) {\n            results[k++] = i;\n        }\n        results.sort();\n\n        return results[Math.floor(Math.random() * (results.length))];\n    };\n    k(die) {\n        let results = [];\n        for (let i = 0; i < 10; i++) {\n            results[i] = this.getRandom(1, die);\n        }\n        const result = this.getRandomValueFromData(results);\n\n        return result;\n    };\n    getRandomValueFromData(data) {\n        let results = [];\n        let k = 0;\n        for (let i=0; i <= data.length; i++) {\n            results[k++] = data[i];\n        }\n        results.sort();\n\n        return results[Math.floor(Math.random() * (results.length-1))];\n    };\n    roll(k, x) {\n\n        return this.k(k)*x;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class AlsariphGenerator extends RandomHelper {\n    getRandomObject(customInitiative){\n        let initiative = 99;\n        if (typeof customInitiative === \"number\" && 0 < customInitiative) {\n            initiative = customInitiative;\n        }\n        const hp = 25;\n        return {\n            \"type\": \"alsariph\",\n            \"name\": \"Alsariph\",\n            \"actions\": [],\n            \"statistics\": {\n                \"xp\": 999,\n                \"kp\": 12,\n                \"currentHp\": hp,\n                \"hp\": hp,\n                \"initiative\": initiative,\n                'pp': 11,\n                \"strength\": 8,\n                \"dexterity\": 14,\n                \"condition\": 16,\n                \"intelligence\": 10,\n                \"wisdom\": 12,\n                \"charisma\": 16,\n                \"speed\": \"30ft\",\n                \"i\": \"76kg; 185cm; 22lata; zasięg widzenia: 36m 120ft 24[ ]; widzenie w ciemności: ; intuicja pasywna: 11\"\n            }\n        }\n    };\n}","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class BanditCaptainGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8)*6)+38;\n        return {\n            \"type\": \"bandit-captain\",\n            \"name\": \"Przywódca bandytów\",\n            \"actions\": [\"scimitar\",\"dagger\",\"reaction\"],\n            \"statistics\": {\n                \"xp\": 450,\n                \"kp\": 15,\n                \"currentHp\": hp,\n                \"hp\": hp, // 65\n                \"initiative\": this.k(20)+2,\n                'pp': 10,\n                \"strength\": 15,\n                \"dexterity\": 16,\n                \"condition\": 14,\n                \"intelligence\": 14,\n                \"wisdom\": 11,\n                \"charisma\": 14,\n                \"speed\": \"30ft\",\n                \"i\": \"Rzuty obronne na siłę +4, zręczność +5, wiedzę +2; atletyka +4, Oszustwo +4; elfi i wspólny; atakuje 2razy bułatem i raz sztyletem; lub dwa razy rzuca sztyletem; Reakcje: opisane w akcjach\"\n            }\n        }\n    };\n}","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class BanditGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(6))+8;\n        return {\n            \"type\": \"bandit\",\n            \"name\": \"Bandyta\",\n            \"actions\": [\"light-crossbow\",\"sword\"],\n            \"statistics\": {\n                \"xp\": 25,\n                \"kp\": 12,\n                \"currentHp\": hp,\n                \"hp\": hp, // 11\n                \"initiative\": this.k(20),\n                'pp': 10,\n                \"strength\": 11,\n                \"dexterity\": 12,\n                \"condition\": 12,\n                \"intelligence\": 10,\n                \"wisdom\": 10,\n                \"charisma\": 10,\n                \"speed\": \"30ft\",\n                \"i\": \"\"\n            }\n        }\n    };\n}","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class HumGenerator extends RandomHelper {\n    getRandomObject(customInitiative){\n        let initiative = 99;\n        if (typeof customInitiative === \"number\" && 0 < customInitiative) {\n            initiative = customInitiative;\n        }\n        const hp = 25;\n        return {\n            \"type\": \"hum\",\n            \"name\": \"Hum\",\n            \"actions\": [],\n            \"statistics\": {\n                \"xp\": 999,\n                \"kp\": 14,\n                \"hp\": hp,\n                \"currentHp\": hp,\n                \"initiative\": initiative,\n                'pp': 9,\n                \"strength\": 8,\n                \"dexterity\": 17,\n                \"condition\": 14,\n                \"intelligence\": 15,\n                \"wisdom\": 8,\n                \"charisma\": 12,\n                \"speed\": \"30ft\",\n                \"i\": \"16kg; 62cm wzrostu; 16 lat; zasięg widzenia: 18m 60ft 12[ ]; widzenie w ciemności: ; intuicja pasywna: 9\"\n            }\n        }\n    };\n}","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class KreaturaGenerator extends RandomHelper {\n    getRandomObject(customInitiative){\n        let initiative = 99;\n        if (typeof customInitiative === \"number\" && 0 < customInitiative) {\n            initiative = customInitiative;\n        }\n        const hp = 25;\n        return {\n            \"type\": \"kreatura\",\n            \"name\": \"Kreatura\",\n            \"actions\": ['runs'],\n            \"statistics\": {\n                \"xp\": 999,\n                \"kp\": 19,\n                \"currentHp\": hp,\n                \"hp\": hp,\n                \"initiative\": initiative,\n                'pp': 13,\n                \"strength\": 16,\n                \"dexterity\": 12,\n                \"condition\": 17,\n                \"intelligence\": 8,\n                \"wisdom\": 13,\n                \"charisma\": 8,\n                \"speed\": \"30ft\",\n                \"i\": \"136kg; 210cm wzrostu; 21lat; (78rok urodzenia); zasięg widzenia: 36m 120ft 24[ ]; intuicja pasywna: 13 (18 z runy)\"\n            }\n        }\n    };\n}","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class OmalenGenerator extends RandomHelper {\n    getRandomObject(customInitiative){\n        let initiative = 99;\n        if (typeof customInitiative === \"number\" && 0 < customInitiative) {\n            initiative = customInitiative;\n        }\n        const hp = 25;\n        return {\n            \"type\": \"omalen\",\n            \"name\": \"Omalen\",\n            \"actions\": [],\n            \"statistics\": {\n                \"xp\": 999,\n                \"kp\": 15,\n                \"currentHp\": hp,\n                \"hp\": hp,\n                \"initiative\": initiative,\n                'pp': 15,\n                \"strength\": 12,\n                \"dexterity\": 17,\n                \"condition\": 13,\n                \"intelligence\": 8,\n                \"wisdom\": 16,\n                \"charisma\": 8,\n                \"speed\": \"30ft\",\n                \"i\": \"80kg; 200cm wzrostu; 157 lat; zasięg widzenia w ciemności: 18m 60ft 12[ ]; intuicja pasywna: 13\"\n            }\n        }\n    };\n}","\nimport RandomHelper from \"../helpers/random-helper\";\n\nexport default class DieRoll extends RandomHelper {\n    test(plus, attackMethod) {\n        const t1 = this.k(20);\n        const t2 = this.k(20);\n        let value = t1;\n        let html = 'test: ';\n        if ('disadvantage' === attackMethod) {\n            if (t1 > t2) {\n                html += `${t1+plus}/<b>${t2+plus}</b>`;\n                value = t2;\n            } else {\n                html += `<b>${t1+plus}</b>/${t2+plus}`;\n                value = t1;\n            }\n        } else if ('advantage' === attackMethod) {\n            if (t1 > t2) {\n                html += `<b>${t1+plus}</b>/${t2+plus}`;\n                value = t1;\n            } else {\n                html += `${t1+plus}/<b>${t2+plus}</b>`;\n                value = t2;\n            }\n        } else {\n            html += `${t1}+${plus} = <b>${t1+plus}</b>`;\n            value = t1;\n        }\n        \n        return {\n            \"html\": html+'</br>',\n            \"value\": value\n        };\n    }\n}\n","import EnemyHelper from \"../helpers/enemy-helper\";\nimport RandomHelper from \"../helpers/random-helper\";\nimport DieRoll from \"./die-roll\";\n\n\nexport default class Enemy extends RandomHelper{\n    id = null;\n    lp = null;\n    type = null;\n    name = null;\n    actions = null;\n    xp = null;\n    kp = null;\n    hp = null;\n    initiative = null;\n    pp = null;\n    strength = null;\n    dexterity = null;\n    condition = null;\n    intelligence = null;\n    wisdom = null;\n    charisma = null;\n    speed = null;\n    i = null;\n\n    attackType = null;\n    attackMethod = null;\n\n    str = null; // modify strength\n    dex = null; // modify dexterity\n\n    isCrit = false;\n    currentHp = null;\n    \n    constructor(obj, app) {\n        super(app);\n        if (typeof obj !== \"undefined\") {\n            this.id = obj.id;\n            this.lp = obj.lp;\n            this.type = obj.type;\n            this.name = obj.name;\n            this.actions = obj.actions;\n            this.xp = obj.statistics.xp;\n            this.kp = obj.statistics.kp;\n            this.hp = obj.statistics.hp;\n            this.initiative = obj.statistics.initiative;\n            this.pp = obj.statistics.pp;\n            this.strength = obj.statistics.strength;\n            this.dexterity = obj.statistics.dexterity;\n            this.condition = obj.statistics.condition;\n            this.intelligence = obj.statistics.intelligence;\n            this.wisdom = obj.statistics.wisdom;\n            this.charisma = obj.statistics.charisma;\n            this.speed = obj.statistics.speed;\n            this.i = obj.statistics.i;\n            // new informations content\n            if (typeof obj.statistics.informations === \"undefined\") {\n                this.informations = null;\n            } else {\n                this.informations = obj.statistics.informations;\n            }\n            if (typeof obj.label === \"undefined\") {\n                this.label = '---';\n            } else {\n                this.label = obj.label;\n            }\n\n            this.str = Math.round((this.strength - 10) / 2);\n            this.dex = Math.round((this.dexterity -10) / 2);\n            \n            if (null === obj.statistics.currentHp) {\n                this.currentHp = this.hp;\n            } else {\n                this.currentHp = obj.statistics.currentHp;\n            }\n        }\n    };\n    style() {\n        if (0 < this.currentHp) {\n            return '';\n        }\n\n        return 'style=\"opacity: 0.5\"';\n    };\n    getMyCssClass() {\n        if (0 < this.currentHp) {\n            return 'btn-warning';\n        }\n\n        return 'btn-danger';\n    };\n    renderHeader() {\n        let label = '<br>';\n        const playersName = ['Kreatura', 'Hum', 'Alsariph', 'Omalen'];\n        if (playersName.includes(this.type)) {\n            label += ``;\n        } else {\n            label += `${this.label}`;\n        }\n        \n        return `\n            ${this.name}<br/>\n            <span style=\"font-size: 0.7em\"\">${this.shortInfo()}</span>\n            <i style=\"font-size: 0.7em\" id=\"${this.getIdBaseElementDom()}--label\">${label}</i>\n            <div class=\"js-battlefield__enemy--hp-bar-by-id-${this.id}\">\n            ${this.renderHpBar()}\n            </div>\n        `;\n    };\n    shortInfo() {\n        return ''; // To complete in specyfic enemy function\n    };\n    renderHpBar() {\n        const percentHP = Math.round(100*(this.currentHp/this.hp));\n        let w3color = 'w3-green';\n        if (15 > percentHP) {\n            w3color = 'w3-red';\n        } else if (35 > percentHP) {\n            w3color = 'w3-orange';\n        }\n        let label = `${this.currentHp}/${this.hp}`;\n        const playersName = ['Kreatura', 'Hum', 'Alsariph', 'Omalen'];\n        if (playersName.includes(this.type)) {\n            // It is a player\n            label = this.currentHp;\n        }\n        \n        return `<div class=\"w3-light-gray w3-round w3-tiny\">\n            <div class=\"w3-container w3-round w3-left ${w3color}\" style=\"width:${percentHP}%\">${label}</div>\n        </div>`;\n    }\n    getLP() {\n        const playersName = ['Kreatura', 'Hum', 'Alsariph', 'Omalen'];\n        if (playersName.includes(this.type)) {\n            return '';\n        } else {\n            return `${this.lp}.`;\n        }\n    }\n    render() {\n        let html = `\n        <div class=\"col-xs-12 col-md-6 col-xl-4 mb-1\" ${this.style()}>\n            <div class=\"btn-group w-100 mb-1\" role=\"group\" aria-label=\"t2\">\n                <button class=\"btn btn-danger js-battlefield__enemy--delete\" data-id=\"${this.id}\">\n                    <i style=\"font-size:0.75em\" class=\"ra ra-eye-shield\"></i>${this.kp}\n                    -<i class=\"ra ra-skull\" data-id=\"${this.id}\"></i>-\n                    <br>\n                    ${this.getLP()}\n                    <br>\n                    <span style=\"font-size: .5em\">${this.xp}</span>\n                </button>\n                <div \n                    class=\"btn ${this.getMyCssClass()} js-actions__collapse w-75\" id=\"${this.getIdBaseElementDom()}\"\n                    data-collapse-target-id=\"#js-battlefield__enemy--show-actions-${this.id}\" \n                    data-type=\"${this.type}\"\n                    data-actions=\"${this.actions}\"\n                    data-name=\"${this.name}\"\n                    data-xp=\"${this.xp}\"\n                    data-kp=\"${this.kp}\"\n                    data-currentHp=\"${this.currentHp}\"\n                    data-hp=\"${this.hp}\"\n                    data-initiative=\"${this.initiative}\"\n                    data-pp=\"${this.pp}\"\n                    data-strength=\"${this.strength}\"\n                    data-dexterity=\"${this.dexterity}\"\n                    data-condition=\"${this.condition}\"\n                    data-intelligence=\"${this.intelligence}\"\n                    data-wisdom=\"${this.wisdom}\"\n                    data-charisma=\"${this.charisma}\"\n                    data-speed=\"${this.speed}\"\n                    data-i=\"${this.i}\"\n                    data-label=\"${this.label}\"\n                >\n                    ${this.renderHeader()}\n                </div>\n                <div class=\"btn btn-primary\">\n                    <button class=\"btn btn-default js-battlefield__enemy--actions__show-statisticks\" data-id=\"${this.id}\">\n                        <i style=\"font-size:0.75em\" class=\"ra ra-rabbit\"></i> ${this.speed}\n                        -<i class=\"ra ra-player\" data-id=\"${this.id}\"></i>-\n                        <br>\n                        ${this.initiative}\n                    </button> \n                </div>\n            </div>\n            <div class=\"js-actions__collapse-target\" id=\"js-battlefield__enemy--show-actions-${this.id}\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"w-100 btn btn-default border-default\">\n                            <div class=\"row\">\n                                <div class=\"col-3\">\n                                    <i style=\"font-size:0.75em\" class=\"ra ra-eye-shield\"></i>${this.kp}\n                                </div>\n                                <div class=\"col-4 text-center\">\n                                    ${this.hpChangeButton()}\n                                </div>\n                                <div class=\"col-5 text-end\">\n                                    <i style=\"font-size:0.75em\" class=\"ra ra-rabbit\"></i> ${this.speed}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row mb-2\">\n                    <div class=\"col-8\">\n                        <input type=\"text\" placeholder=\"note\" id=\"js-battlefield__enemy--label-${this.id}\" \n                            class=\"btn btn-default border-info form-control\" />\n                    </div>\n                    <div class=\"col-4\">\n                        <button \n                            data-target=\"#js-battlefield__enemy--label-${this.id}\"\n                            data-base-id=\"${this.id}\"\n                            class=\"btn btn-default btn-success\n                            form-control js-battlefield__enemy--store-label\"\n                        >Zapisz</button>\n                    </div>\n                </div>\n                ${this.renderActions()}\n                <br/>\n                ${this.renderInformation()}\n            </div>\n        </div>\n        `;\n\n        return html;\n    };\n    renderActions() {\n        let html = ``;\n        for (let key in this.actions) {\n            html += this.renderAction(this.actions[key]);\n        }\n        html += ``;\n\n        return html;\n    };\n    renderAction(type){\n        const enemyHelper = new EnemyHelper(this.appClass);\n        \n        return `\n            <div class=\"btn-group mb-1 w-100\" role=\"group\" aria-label=\"t1\">\n                <button type=\"button\" class=\"js-actions__attack btn btn-secondary\"\n                    data-enemy-type=\"${this.type}\"\n                    data-attack-type=\"${type}\"\n                    data-attack-method=\"disadvantage\"\n                    data-parent-id=\"${this.getIdBaseElementDom()}\"\n                >\n                    -\n                </button>\n                <button type=\"button\" class=\"js-actions__attack btn btn-secondary\"\n                    data-enemy-type=\"${this.type}\"\n                    data-attack-type=\"${type}\"\n                    data-attack-method=\"normal\"\n                    data-parent-id=\"${this.getIdBaseElementDom()}\"\n                >\n                    ${enemyHelper.getAttackName(type)}\n                </button>\n                <button type=\"button\" class=\"js-actions__attack btn btn-secondary\"\n                    data-enemy-type=\"${this.type}\"\n                    data-attack-type=\"${type}\"\n                    data-attack-method=\"advantage\"\n                    data-parent-id=\"${this.getIdBaseElementDom()}\"\n                >\n                    +\n                </button>\n            </div>`;\n    };\n    setAttackType(type) {\n        this.attackType = type;\n    };\n    setAttackMethod(method) {\n        this.attackMethod = method;\n    };\n    attack() {\n        const enemyHelper = new EnemyHelper(this.appClass);\n        \n        let result = '<div class=\"result-atack\">';\n        result += this[enemyHelper.getAttackFunction(this.attackType)]();\n        result += '</div>';\n\n        return result;\n    };\n    getIdBaseElementDom() {\n        return 'id-'+this.id;\n    };\n    getTestResult(plus) {\n        const dieRollHelper = new DieRoll(this.appClass);\n        const result = dieRollHelper.test(plus, this.attackMethod);\n        let value = result.value;\n        let html = result.html;\n\n        if (20 === value) {\n            this.isCrit = true;\n            html += `*`;\n        }\n        \n        return {\n            \"html\": html,\n            \"value\": value\n        };\n    };\n    generateDmg(dieResult, plus, name) {\n        let dmg = 0;\n        if (this.isCrit) {\n            dmg = (dieResult * 2) + plus;\n        } else {\n            dmg = dieResult + plus;\n        }\n        return `\n            <button class=\"js-dmg--show btn btn-default\" data-target=\".js-dmg-${this.id}\">\n                ${name}\n            </button>\n            <b class=\"d-none js-dmg-${this.id}\">${dmg} (${name})</b>\n            <br/>\n        `;\n    };\n    renderInformation() {\n        let html = '';\n        // new way to the display informations:\n        // if (null !== this.informations) {\n        //     $.each(this.informations, function(k, val) {\n        //         html += '<details>';\n        //         html += `<summary>${val.name}</summary>`;\n        //         for (let k in val.content) {\n        //             html += `<p>${val.content[k]}</p>`;\n        //         }\n        //         html += '</details>';\n        //     });\n        //     console.log('this.informations: ', this.informations);\n        // } else {\n        //     // old compatible version\n        //     const informations = this.i.split(';');\n        //     for (let k in informations) {\n        //         html += informations[k]+'</br>';\n        //     }\n        // }\n        // html += `pasywna percepcja: ${this.pp}</br>`;\n        // html += `szybkość: ${this.speed}</br>`;\n\n        return html;\n    };\n    hpChangeButton() {\n        return `\n        <div class=\"btn-group\" role=\"group\" aria-label=\"t3\">\n            <button class=\"btn btn-sm btn-default border border-success js-actions__hp-changed\"\n                data-minus-value=\"-5\"\n                data-id=\"${this.id}\"\n            >-5</button>\n            <button class=\"btn btn-sm btn-default border border-success js-actions__hp-changed\"\n                data-minus-value=\"-1\"\n                data-id=\"${this.id}\"\n            >-1</button>\n            <button class=\"btn btn-sm btn-default border border-success js-actions__hp-changed\"\n                data-minus-value=\"5\"\n                data-id=\"${this.id}\"\n            >+5</button>\n        </div>`;\n    };\n    renderStatisticks(){\n        return `\n        <div class=\"row\">\n        <div class=\"col-12\">\n            <table class=\"tg\">\n                <thead>\n                    <tr>\n                        <th class=\"tg-0pky\">str</th>\n                        <th class=\"tg-0pky\">dex</th>\n                        <th class=\"tg-0pky\">con</th>\n                        <th class=\"tg-0pky\">int</th>\n                        <th class=\"tg-0pky\">wis</th>\n                        <th class=\"tg-0pky\">chr</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td class=\"tg-0pky\">${this.strength}</td>\n                        <td class=\"tg-0pky\">${this.dexterity}</td>\n                        <td class=\"tg-0pky\">${this.condition}</td>\n                        <td class=\"tg-0pky\">${this.intelligence}</td>\n                        <td class=\"tg-0pky\">${this.wisdom}</td>\n                        <td class=\"tg-0pky\">${this.charisma}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"col-12\">\n            ${this.renderInformation()}\n        </div>\n        </div>\n        `;\n    };\n    /** return better bonus */\n    bonus() {\n        if (this.str > this.dex) {\n            return this.str;\n        }\n\n        return this.dex;\n    };\n    changeLabel(text) {\n        // $(`#${this.getIdBaseElementDom()}--label`).html(text);\n    }\n}\n","import Enemy from \"../basic/enemy\";\n\nexport default class Bandit extends Enemy {\n    // \"actions\": [\"short-bow\",\"sword\"],\n    attackSword() {\n        const testResult = this.getTestResult(3); // +3\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 1, 'Obrażenia cięte');\n\n        return html;\n    };\n    attackLightCrossbow() {\n        const testResult = this.getTestResult(3);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(8), 1, 'Obrażenia kłute');\n\n        return html;\n    }\n}\n","import Enemy from \"../basic/enemy\";\n\nexport default class BanditCaptain extends Enemy {\n    // \"actions\": [\"scimitar\",\"dagger\"],\n    attackScimitar() {\n        const testResult = this.getTestResult(5);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 3, 'Obrażenia cięte');\n\n        return html;\n    };\n    attackDagger() {\n        const testResult = this.getTestResult(5);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(4), 3, 'Obrażenia kłute');\n        html += '<br>20/60ft'\n\n        return html;\n    };\n    attackReaction() {\n        return `\n            Parowanie: <br>\n            jeśli dzierży broń i widzi przeciwnika może dodać 2 do swojej klasy pancerza\n        `;\n    }\n}\n","import Enemy from \"../basic/enemy\";\n\nexport default class Player extends Enemy\n{   \n    render() {\n        let html = super.render();\n        const new_html = html.replace('btn-warning', 'btn-success');\n\n        return new_html;\n    };\n    renderActions() {\n        let returnHtmlActions = 'niezdefiniowano';\n        switch (this.type) {\n            case 'kreatura':\n                returnHtmlActions = `\n                    <ul>\n                        <li>zasięg widzenia: 36m 120ft 24[ ];</li>\n                        <li>intuicja pasywna: 13 (18 z runy);</li>\n                        <li>pasywna percepcja: ${this.pp}</li>\n                        <li>Zwiększenie rozmiaru (duży rozmiar) trwa minutę dwa razy na długi odpoczynek,</li>\n                    </ul>\n                    info:<br>\n                    <details>\n                        <summary>Runa miecza i kamienia </summary> \n                        <p>\n                            podwójna biegłość czyli ekspertyza w narzędziach, \n                            które zna oraz widzenie w czemności na 120ft \n                            i stałe ułatwienie w rzutach na intuicję;\n                        </p>\n                    </details>\n                    <details>\n                        <summary>*jeśli duży rozmiar:</summary> \n                        <p>\n                            <ul>\n                            <li>przewaga w testach na siłę i rzutach obronnych na siłę</li> \n                            <li>+1k6 do obrażeń raz na turę;</li> \n                        </p>\n                    </details>                 \n                `;\n                break;\n\n            case 'hum':\n                returnHtmlActions = `\n                <details>\n                    <summary>ma cztery kości k6</summary>\n                    <p>\n                        jeśli nie uda mu się test w jakiejś umiejętności w której ma biegłość\n                        może dorzucić wynik z kości k6\n                        jeśli będzie sukces to kość się marnuje, jeśli nie to kość się nie marnuje.\n                    </p>\n                </details>\n                <details>\n                    <summary>magiczne ostrza (18m zasięgu) pojawiające się w ręku</summary>\n                    <p>\n                        1k6 obrażeń psyhicznych obrażeń + bonusowe obrażenia\n                        nie zostawiają śladów ataku\n                        ostrze znika zaraz po rzucie bez znaczenia czy trafi czy nie trafi\n                        <br><br>\n                        jeśli atakujesz takim sztyletem w akcji dodatkowej,\n                        wtedy obrażeń jest 1k4 + bonusowe obrażenia\n                        <br><br>\n                        Hum raz na krótki odpoczynek może odzyskać jedna kość\n                        <minus> nie można zrobić ataku okazyjnego bo nie ma broni w ręce\n                    </p>\n                </details>\n                <details>\n                    <summary>telepatia</summary>\n                    <p>\n                        telepatia z dwoma osobami w drużynie i mogą odpowiadać (1 mila odległości)\n                        Hum musi widzień cel aby nawiązać ten kontakt\n                        Raz można tego użyć na długi odpoczynek chyba, że odrzuci kostki,\n                        które ma do obrażeń\n                    </p>\n                </details>\n                <details>\n                    <summary>Wie gdzie szukać informacji</summary>\n                    <p>\n                        Kiedy Hum chce się dowiedzieć jakiejś informacji, często wie skąd ją uzyskać.\n                    </p>\n                </details>\n                `;\n                break;\n\n            case 'omalen':\n                returnHtmlActions = `\n                Rozpoznawanie ziół jest automatyczne <br>\n                Może rozpoznawać rośliny ale nie koniecznie ich właściwości <br>\n                <details>\n                    <summary>Pijany mistrz:</summary>\n                    <p>\n                        <ul>\n                            <li>Ma więcej ki </li>\n                            <li>+10 ft ruchu po skorzystaniu z dodatkowego ataku pięścią oraz \n                                nie może dostać z ataku okazyjnego (wyjątek sentinel - atut)</li>\n                            <li>+ruchu czyli nie 45 a 55ft ruchu</li>\n                            <li>+latające w Omalena przedmioty mogą mieć odjęte obrażenia, \n                                a jeśli obrażeń nie dostanie to może odrzucić ten pocisk jeśli,\n                                mieści mu się w ręce (test ataku) (1k6 obrażeń)\n                            </li>\n                        </ul>\n                    </p>\n                </details>\n                `;\n                break;\n\n            case 'alsariph':\n                returnHtmlActions = `\n                nie krwawi; ma czarny tatuaż na ciele wychodzący od serca na wszystkie strony\n                widać go na szyi.\n                `;\n                break;\n        \n            default:\n                break;\n        }\n\n        return returnHtmlActions;\n    };\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class DwarfGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8)*2)+8;\n        return {\n            \"type\": \"dwarf\",\n            \"name\": \"Krasnolud Wojownik\",\n            \"actions\": [\"axe\",\"short-bow\"],\n            \"statistics\": {\n                \"xp\": 100,\n                \"kp\": 13,\n                \"currentHp\": hp, // 16\n                \"hp\": hp,\n                \"initiative\": this.k(20)+1,\n                'pp': 15,\n                \"strength\": 11,\n                \"dexterity\": 14,\n                \"condition\": 12,\n                \"intelligence\": 11,\n                \"wisdom\": 13,\n                \"charisma\": 11,\n                \"speed\": \"25ft\",\n                \"i\": \"2x atak mele lub range; natura +4; Percepcja +5; Siła +6; Przetrwanie +5;\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class Dwarf extends Enemy\n{   \n    // \"actions\": [\"axe\",\"short-bow\"],\n    attackAxe() {\n        const testResult = this.getTestResult(2);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 0, 'Obrażenia cięte');\n        html += '<br/>20/60ft';\n\n        return html;\n    };\n    attackShortBow() {\n        const testResult = this.getTestResult(4);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(8), 2, 'Obrażenia kłute');\n        html += '<br/>80/320ft';\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class ScoutBanditGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8)*2)+8;\n        return {\n            \"type\": \"scout-bandit\",\n            \"name\": \"Bandyta zwiadowca\",\n            \"actions\": [\"sword\",\"long-bow\"],\n            \"statistics\": {\n                \"xp\": 100,\n                \"kp\": 13,\n                \"currentHp\": hp,\n                \"hp\": hp, // 16\n                \"initiative\": this.k(20)+2,\n                'pp': 15,\n                \"strength\": 11,\n                \"dexterity\": 14,\n                \"condition\": 12,\n                \"intelligence\": 11,\n                \"wisdom\": 13,\n                \"charisma\": 11,\n                \"speed\": \"30ft\",\n                \"i\": \"2x atak mele lub range; advantage w testach opartych na słuchu i wzroku; natura +4; percepcja +5; oszustwo +6 przetrwanie +5\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class ScoutBandit extends Enemy\n{   \n    // \"actions\": [\"sword\",\"long-bow\"],\n    attackLongBow() {\n        const testResult = this.getTestResult(4);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(8), 2, 'Obrażenia kłute');\n        html += '<br/>zasięg 150/600 ft (30[ ]/120[ ])';\n\n        return html;\n    };\n    attackSword() {\n        const testResult = this.getTestResult(3);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 2, 'Obrażenia cięte');\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class WoodGolemGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8)*3)+25;\n        return {\n            \"type\": \"wood-golem\",\n            \"name\": \"Golem drzewny\",\n            \"actions\": [\"smash\",\"throw-wood\"],\n            \"statistics\": {\n                \"xp\": 500,\n                \"kp\": 8,\n                \"currentHp\": hp,\n                \"hp\": hp, // 38\n                \"initiative\": this.k(20)-1,\n                'pp': 8,\n                \"strength\": 15,\n                \"dexterity\": 6,\n                \"condition\": 14,\n                \"intelligence\": 1,\n                \"wisdom\": 6,\n                \"charisma\": 1,\n                \"speed\": \"10ft\",\n                \"i\": \"3x atak mele lub range; odporny na zmiany kształtu; podatny na ogień, obrażenia toporem i srebro; ślepowidzenie do 60ft (6[ ])\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class WoodGolem extends Enemy\n{   \n    // \"actions\": [\"smash\",\"throw-wood\"],\n    attackSmash() {\n        const testResult = this.getTestResult(4);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 2, 'Obrażenia obuchowe');\n        html += this.generateDmg(this.roll(4,2), 0, 'Obrażenia magiczne');\n\n        return html;\n    };\n    attackThrowWood() {\n        const testResult = this.getTestResult(0);\n        let html = testResult.html;\n        html += this.generateDmg(this.roll(6,2), 0, 'Obrażenia magiczne');\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class DogGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(6))+8;\n        return {\n            \"type\": \"dog\",\n            \"name\": \"Pies\",\n            \"actions\": [\"bite\"],\n            \"statistics\": {\n                \"xp\": 35,\n                \"kp\": 10,\n                \"currentHp\": hp, // 10\n                \"hp\": hp,\n                \"initiative\": this.k(20)+2,\n                'pp': 13,\n                \"strength\": 10,\n                \"dexterity\": 15,\n                \"condition\": 12,\n                \"intelligence\": 3,\n                \"wisdom\": 12,\n                \"charisma\": 6,\n                \"speed\": \"40ft\",\n                \"i\": \"advantage w testach ataku z sojusznikiem obok; advantage w testach węchu i słuchu; percepcja +3; skradanie się +4\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class Dog extends Enemy\n{   \n    // \"actions\": [\"bit\"],\n    attackBite() {\n        const testResult = this.getTestResult(3); // +3\n        let html = testResult.html;\n        html += this.generateDmg(this.roll(4,2), 2, 'Obrażenia kłute');\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class GoblinGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(6))+5;\n        return {\n            \"type\": \"goblin\",\n            \"name\": \"Goblin\",\n            \"actions\": [\"short-bow\",\"scimitar\"],\n            \"statistics\": {\n                \"xp\": 50,\n                \"kp\": 15,\n                \"currentHp\": hp, // 7\n                \"hp\": hp,\n                \"initiative\": this.k(20)+2,\n                'pp': 9,\n                \"strength\": 8,\n                \"dexterity\": 14,\n                \"condition\": 10,\n                \"intelligence\": 10,\n                \"wisdom\": 8,\n                \"charisma\": 8,\n                \"speed\": \"30ft\",\n                \"i\": \"+6 do kradzieży/podstępu; bonusową akcją może się ukryć albo odstąpić; ; widzenie w ciemności do 60ft (6[ ])\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class Goblin extends Enemy {\n    // \"actions\": [\"short-bow\",\"scimitar\"],\n    attackShortBow() {\n        const testResult = this.getTestResult(4);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 2, 'Obrażenia kłute');\n        html += '<br/>zasięg 80/320 ft (18[ ]/72[ ])';\n\n        return html;\n    };\n    attackScimitar() {\n        const testResult = this.getTestResult(4);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 4, 'Obrażenia cięte');\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class HobgoblinGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8))+10;\n        return {\n            \"type\": \"hobgoblin\",\n            \"name\": \"Hobgoblin\",\n            \"actions\": [\"sword\",\"long-bow\"],\n            \"statistics\": {\n                \"xp\": 100,\n                \"kp\": 18,\n                \"currentHp\": hp, // 11\n                \"hp\": hp,\n                \"initiative\": this.k(20),\n                'pp': 10,\n                \"strength\": 13,\n                \"dexterity\": 12,\n                \"condition\": 12,\n                \"intelligence\": 10,\n                \"wisdom\": 10,\n                \"charisma\": 9,\n                \"speed\": \"30ft\",\n                \"i\": \"dodatkowe 2k6 obrażeń w istotę obok hobgoblina, którą atakował w tej turze i znajduje się przy sojuszniku;\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class Hobgoblin extends Enemy {\n    // \"actions\": [\"sword\",\"longbow\"],\n    attackSword() {\n        const testResult = this.getTestResult(3);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(8), 1, 'Obrażenia cięte');\n\n        return html;\n    };\n    attackLongBow() {\n        const testResult = this.getTestResult(3);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(8), 1, 'Obrażenia kłute');\n        html += '<br/>zasięg 150/600 ft (30[ ]/120[ ])';\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class GnollGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8)*2)+12;\n        return {\n            \"type\": \"gnoll\",\n            \"name\": \"Gnoll\",\n            \"actions\": [\"bite\",\"spear\", \"long-bow\"],\n            \"statistics\": {\n                \"xp\": 100,\n                \"kp\": 15,\n                \"currentHp\": hp, // 22\n                \"hp\": hp,\n                \"initiative\": this.k(20)+2,\n                'pp': 10,\n                \"strength\": 14,\n                \"dexterity\": 12,\n                \"condition\": 11,\n                \"intelligence\": 6,\n                \"wisdom\": 10,\n                \"charisma\": 7,\n                \"speed\": \"30ft\",\n                \"i\": \"szał: Jeśli gnoll zmniejszy hp przeciwnika do 0hp atakiem z bliska otrzymuje dodatkową akcją z połową szybkości i może wykonać atak ugryzienia; widzenie w ciemności 60ft 12[ ]\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class Gnoll extends Enemy {\n    // \"actions\": [\"bite\",\"spear\", \"long-bow\"],\n    attackBite() {\n        const testResult = this.getTestResult(4);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(4), 2, 'Obrażenia kłute');\n\n        return html;\n    };\n    attackSpear() {\n        const testResult = this.getTestResult(4);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 2, 'Obrażenia kłute');\n        html += this.generateDmg(this.k(8), 2, 'lub obrażenia kłute (dwie ręce)');\n        html += '<br/>z bliska lub zasięg 20/60 ft (4[ ]/12[ ])';\n\n        return html;\n    };\n    attackLongBow() {\n        const testResult = this.getTestResult(3);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(8), 1, 'Obrażenia kłute');\n        html += '<br/>zasięg 150/600 ft (30[ ]/120[ ])';\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class GnollPackLordGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8)*7)+18;\n        return {\n            \"type\": \"gnoll-pack-lord\",\n            \"name\": \"Gnoll przywódca watachy\",\n            \"actions\": [\"bite\", \"glaive\", \"long-bow\"],\n            \"statistics\": {\n                \"xp\": 450,\n                \"kp\": 15,\n                \"currentHp\": hp, // 49\n                \"hp\": hp,\n                \"initiative\": this.k(20)+2,\n                'pp': 10,\n                \"strength\": 16,\n                \"dexterity\": 14,\n                \"condition\": 13,\n                \"intelligence\": 8,\n                \"wisdom\": 11,\n                \"charisma\": 9,\n                \"speed\": \"30ft\",\n                \"i\": \"\",\n                \"informations\": [\n                    {\n                        \"name\": \"Szał\",\n                        \"content\": [\n                            \"Jeśli gnoll zmniejszy hp przeciwnika do 0hp atakiem z bliska otrzymuje dodatkową akcją z połową szybkości i może wykonać atak ugryzienia\"\n                        ]\n                    },\n                    {\n                        \"name\": \"Multiatak\",\n                        \"content\": [\n                            \"Może wykonać multiatak kżadą bronią, lub użyć 'podżegania do szału'\"\n                        ]\n                    },\n                    {\n                        \"name\": \"Podżeganie do szału\",\n                        \"content\": [\n                            \"Może w ramach akcji zakomenderować innemu gnollowi, żeby wykonał akcję ugryzienia.\",\n                            \"Pod warunkiem, że ten gnoll go widzi i słyszy i jest w zasięgu 30ft\"\n                        ]\n                    },\n                    {\n                        \"name\": \"widzenie w ciemności\",\n                        \"content\": [\n                            \"60ft widzenia w ciemności, czyli widzi odcienie szarości i ma utrudnienie w testach percepcji\"\n                        ]\n                    }\n                ]\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class GnollPackLord extends Enemy {\n    attackBite() {\n        const testResult = this.getTestResult(5);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(4), 3, 'Obrażenia kłute');\n\n        return html;\n    };\n    attackGlaive() {\n        const testResult = this.getTestResult(5);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(10), 3, 'Obrażenia cięte');\n        html += '<br/>z bliska lub zasięg 20/60ft';\n\n        return html;\n    };\n    attackLongBow() {\n        const testResult = this.getTestResult(4);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(8), 2, 'Obrażenia kłute');\n        html += '<br/>zasięg 150/600ft';\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class ShadowGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8))+12;\n        return {\n            \"type\": \"shadow\",\n            \"name\": \"Cień\",\n            \"actions\": [\"strength-drain\"],\n            \"statistics\": {\n                \"xp\": 100,\n                \"kp\": 12,\n                \"currentHp\": hp,\n                \"hp\": hp, // 16\n                \"initiative\": this.k(20)+2,\n                'pp': 10,\n                \"strength\": 6,\n                \"dexterity\": 14,\n                \"condition\": 13,\n                \"intelligence\": 6,\n                \"wisdom\": 10,\n                \"charisma\": 8,\n                \"speed\": \"40ft\",\n                \"i\": `Po udanym ataku, cel ataku traci 1d4 statyskyki siły. Jeśli spadnie do zera - umiera \n                (statystyki wracają po ukończeniu długiego lub krutkiego odpoczynku). \n                Jeśli jakiś humanoid sojusznik umrze od ataku cienia, to po 1d4 hodzin powstaje nad jego ciałem nowy cień.; \n                Widzenie w ciemności 60ft (12 [ ]]); ukrycie się +4; wrażliwy na światło (dmg); \n                odporość na: kwas, zimno, ogień, błyskawica, grzmot; odporny na obrażenia: obuchowe, cięte i kłute od niemagicznych ataków; \n                całkowicie niewrażliwy na obrażenia nekrotyczne i trucizny; \n                odporny na efekty: wyczerpanie, przestraszony, zmagany, sparaliżowany, skamieniały, zatruty, podatny, powściągliwy; \n                <b>nie można się z nim porozumieć</b>; amorficzny - może przemieszczać się przez dziurki od klucza; \n                jeśli jest słabe światło albo ciemno - może się schować z bonusem +6 w akcji dodatkowej; \n                jeśli jest światło słoneczne, cień ma utrudnienia w testach ataku i testach cech i obnonnych;`\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class Shadow extends Enemy {\n    // \"actions\": [\"strength-drain\"],\n    shortInfo() {\n        return '+4: 2k6+2(nekr) -k4(STR)';\n    };\n    attackStrengthDrain() {\n        const testResult = this.getTestResult(4);\n        let html = testResult.html;\n        html += this.generateDmg(this.roll(6,2), 2, 'Obrażenia nekrotyczne');\n        html += '<br/>dodatkowo cel zmniejsza o +1k4 swoją cechę siły';\n\n        return html;\n    };\n    renderInformation() {\n        let html = '';\n        const informations = this.i.split(';');\n        for (let k in informations) {\n            html += informations[k]+'</br></br>';\n        }\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class ThugGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8)*3)+20;\n        return {\n            \"type\": \"thug\",\n            \"name\": \"Zbir\",\n            \"actions\": [\"mace\",\"heavy-crossbow\"],\n            \"statistics\": {\n                \"xp\": 100,\n                \"kp\": 11,\n                \"currentHp\": hp,\n                \"hp\": hp, // 32\n                \"initiative\": this.k(20),\n                'pp': 10,\n                \"strength\": 15,\n                \"dexterity\": 11,\n                \"condition\": 14,\n                \"intelligence\": 10,\n                \"wisdom\": 10,\n                \"charisma\": 11,\n                \"speed\": \"30ft\",\n                \"i\": \"2x atak mele; pack tactics;\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class Thug extends Enemy {\n    // \"actions\": [\"mace\",\"heavy-crossbow\"],\n    attackMace() {\n        const testResult = this.getTestResult(4);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 2, 'Obrażenia obuchowe');\n\n        return html;\n    };\n    attackHeavyCrossbow() {\n        const testResult = this.getTestResult(2);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(10), 0, 'Obrażenia kłute');\n        html += '</br>100/400ft (20[ ]/80[ ])';\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class DwarfExtraGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8)*2)+12;\n        return {\n            \"type\": \"dwarf-extra\",\n            \"name\": \"Krasnolud Wojownik+\",\n            \"actions\": [\"battleaxe\",\"heavy-crossbow\"],\n            \"statistics\": {\n                \"xp\": 150,\n                \"kp\": 15,\n                \"currentHp\": hp, // 16\n                \"hp\": hp,\n                \"initiative\": this.k(20),\n                'pp': 12,\n                \"strength\": 14,\n                \"dexterity\": 13,\n                \"condition\": 16,\n                \"intelligence\": 10,\n                \"wisdom\": 11,\n                \"charisma\": 10,\n                \"speed\": \"25ft\",\n                \"i\": \"2x atak mele; ;\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class DwarfExtra extends Enemy\n{   \n    // \"actions\": [\"battleaxe\",\"heavy-crossbow\"],\n    attackBattleaxe() {\n        const testResult = this.getTestResult(5);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(8), 3, 'Obrażenia cięte');\n        html += this.generateDmg(this.k(10), 3, '(lub dwiema rękami) Obrażenia cięte');\n\n        return html;\n    };\n    attackHeavyCrossbow() {\n        const testResult = this.getTestResult(3);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(10), 1, 'Obrażenia kłute');\n        html += '<br/>100/400ft (20[ ]/80[ ])';\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class DarklingGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(6))+9;\n        return {\n            \"type\": \"darkling\",\n            \"name\": \"Darkling\",\n            \"actions\": [\"dagger\"], // or range 20/60 ft. ({@damage 1d4 + 3}) piercing damage plus 7 ({@damage 2d6}) necrotic damage.\n            \"statistics\": {\n                \"xp\": 100,\n                \"kp\": 14, // light armor\n                \"currentHp\": hp, // 13hp (3d6+3)\n                \"hp\": hp,\n                \"initiative\": this.k(20)+1,\n                'pp': 15,\n                \"strength\": 9,\n                \"dexterity\": 16,\n                \"condition\": 12,\n                \"intelligence\": 10,\n                \"wisdom\": 12,\n                \"charisma\": 10,\n                \"speed\": \"30ft\",\n                \"i\": `Są to małe tajemnicze stworzenia wyklęte z elfich lasów. Podobne do goblinów czy gnomów; aktobatyka: +5, oszystwo: +2, percepcja: +5, podstęp: +7; ślepowidzenie 30 ft. 6[ ],darkvision 120 ft. 24 [ ]; języki: elfi, leśny; \n                Wrażliwość na światło: Będąc w jasnym świetle, Darkling ma wadę w testach ataku, a także w testach Mądrości ({@skill Percepcja}), które opierają się na wzroku.; \n                Death Flash: Kiedy darkling umiera, niemagiczne światło wydobywa się z niego w promieniu 10 stóp, gdy jego ciało i dobytek, inne niż metalowe \n                lub magiczne przedmioty, spalają się na popiół. Każda istota na tym obszarze musi wykonać {@dc 10} rzut obronny na Kondycję \n                lub zostać {@condition zaślepiona} do końca swojej następnej tury.`\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class Darkling extends Enemy {\n    // \"actions\": [\"dagger\"], // or range 20/60 ft. ({@damage 1d4 + 3}) piercing damage plus 7 ({@damage 2d6}) necrotic damage.\n    shortInfo() {\n        return 'Sztylet+5: k4+3(kł) + 2k6(nekr)';\n    };\n    attackDagger() {\n        const testResult = this.getTestResult(5);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(4), 3, 'Obrażenia kłute');\n        html += this.generateDmg(this.roll(6,2), 0, 'Obrażenia nekrotyczne');\n        html += '<br> mele lub 20/60 ft';\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class BarbarianGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8)*4)+47; // 67\n        return {\n            \"type\": \"barbarian\",\n            \"name\": \"Barbarzyńca\",\n            \"actions\": [\"greataxe\", \"spear\"],\n            \"statistics\": {\n                \"xp\": 450,\n                \"kp\": 14,\n                \"currentHp\": hp,\n                \"hp\": hp,\n                \"initiative\": this.k(20)+3,\n                'pp': 10,\n                \"strength\": 16,\n                \"dexterity\": 15,\n                \"condition\": 17,\n                \"intelligence\": 9,\n                \"wisdom\": 11,\n                \"charisma\": 9,\n                \"speed\": \"30ft\",\n                \"i\": \"brawura: ułatwienie w testach ataku i ułatwienie dla przeciwników w testach ataku na nim;\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class Barbarian extends Enemy {\n    shortInfo() {\n        return 'GreatAxe +5 [k12+3(cięte)] <br> brawura - ułatwienie dla obu stron';\n    };\n    attackGreataxe() {\n        const testResult = this.getTestResult(5);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(12), 3, 'Obrażenia cięte');\n\n        return html;\n    };\n    AttackSpear() {\n        const testResult = this.getTestResult(5);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 3, 'Obrażenia kłute');\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n// import Random from \"../random.js\";\n\nexport default class AnyoneGenerator extends RandomHelper {\n    getRandomObject(customInitiative){\n        let initiative = this.getRandom(3, 23);\n        if (typeof customInitiative === \"number\" && 0 < customInitiative) {\n            initiative = customInitiative;\n        }\n        const hp = this.getRandom(30, 60);\n        // const random = new Random();\n        // const appearance = random.getRandomAppearance();\n        // const character = random.getRandomCharacterAttr();\n\n        return {\n            \"type\": \"anyone\",\n            \"name\": \"Ktokolwiek\",\n            \"actions\": ['all'],\n            \"statistics\": {\n                \"xp\": 999,\n                \"kp\": this.getRandom(10, 18),\n                \"currentHp\": hp,\n                \"hp\": hp,\n                \"initiative\": initiative,\n                'pp': this.getRandom(8, 18),\n                \"strength\": this.getRandom(8, 18),\n                \"dexterity\": this.getRandom(8, 18),\n                \"condition\": this.getRandom(8, 18),\n                \"intelligence\": this.getRandom(8, 18),\n                \"wisdom\": this.getRandom(8, 18),\n                \"charisma\": this.getRandom(8, 18),\n                \"speed\": \"30ft\",\n                \"i\": ''//`wygląd: ${appearance}; cechy: ${character.positive} lub ${character.negative}`\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class Anyone extends Enemy {\n    renderActions() {\n        return `\n        <ul>\n            <li>\n                krótki miecz: k20+${this.bonus()}+biegłość(+2) \n                -> k6+${this.bonus()}\n            </li>\n        </ul>`;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class DireWolfGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(10)*3)+21;\n        return {\n            \"type\": \"dire-wolf\",\n            \"name\": \"Straszny wilk\",\n            \"actions\": [\"bite\"],\n            \"statistics\": {\n                \"xp\": 200,\n                \"kp\": 14,\n                \"currentHp\": hp, // 37\n                \"hp\": hp,\n                \"initiative\": this.k(20)+5,\n                'pp': 13,\n                \"strength\": 17,\n                \"dexterity\": 15,\n                \"condition\": 15,\n                \"intelligence\": 3,\n                \"wisdom\": 12,\n                \"charisma\": 7,\n                \"speed\": \"50ft\",\n                \"i\": \"advantage w testach ataku z sojusznikiem obok; advantage w testach węchu i słuchu; percepcja +3; skradanie się +4\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class DireWolf extends Enemy\n{   \n    shortInfo() {\n        return `+5/2k6+3(kł) z powaleniem ST 13\n        <br/> ułatwienie z sojusznikiem obok`;\n    };\n    // \"actions\": [\"bit\"],\n    attackBite() {\n        const testResult = this.getTestResult(5);\n        let html = testResult.html;\n        html += this.generateDmg(this.roll(6, 2), 3, 'Obrażenia kłute');\n        html += ' cel ataku musi wykonać test siły o ST 13 albo będzie powalony.';\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class HobgoblinCaptainGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8)*3)+25;\n        return {\n            \"type\": \"hobgoblin-captain\",\n            \"name\": \"Hobgoblin Przywódca\",\n            \"actions\": [\"javelin\",\"greatsword\",\"leadership\"],\n            \"statistics\": {\n                \"xp\": 700,\n                \"kp\": 17, // zbroja płytowa\n                \"currentHp\": hp, // 39\n                \"hp\": hp,\n                \"initiative\": this.k(20),\n                'pp': 10,\n                \"strength\": 15,\n                \"dexterity\": 14,\n                \"condition\": 12,\n                \"intelligence\": 12,\n                \"wisdom\": 10,\n                \"charisma\": 13,\n                \"speed\": \"30ft\",\n                \"i\": \"zbroja płytowa; Dwa ataki wielkim mieczem; Przewaga bojowa: raz na turę może walnąć 3k6 obrażeń w istotę obok niego, którą atakował w tej turze i znajduje się przy sojuszniku;\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class HobgoblinCaptain extends Enemy {\n    // \"actions\": [\"javelin\",\"greatsword\",\"leadership\"],\n    attackJavelin() {\n        const testResult = this.getTestResult(4);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 2, 'Obrażenia kłute');\n        html += '30/120ft'\n\n        return html;\n    };\n    attackGreatsword() {\n        const testResult = this.getTestResult(4);\n        let html = testResult.html;\n        html += this.generateDmg(this.roll(6,2), 2, 'Obrażenia cięte');\n        // html += '<br/>zasięg 150/600 ft (30[ ]/120[ ])';\n\n        return html;\n    };\n    attackLeadership() {\n        return `Może wydać specjalną komendę, dla swojego sojusznika, których widzi i ma w zasięgu 30ft<br>\n        Tan sojusznik, jeśli rozumie przywódcę, może dodać 1k4 do rzutu obronnego lub ataku<br>\n        `;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class RotMonsterGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(10)*16)+48;\n        return {\n            \"type\": \"rot-monster\",\n            \"name\": \"Gnilec\",\n            \"actions\": [\"multiattack\",\"smash\",\"absorption\"],\n            \"statistics\": {\n                \"xp\": 1800,\n                \"kp\": 15,\n                \"currentHp\": hp,\n                \"hp\": hp, // 136\n                \"initiative\": this.k(20),\n                'pp': 10,\n                \"strength\": 18,\n                \"dexterity\": 8,\n                \"condition\": 16,\n                \"intelligence\": 5,\n                \"wisdom\": 10,\n                \"charisma\": 5,\n                \"speed\": \"20ft\",\n                \"i\": \"[+7/2k8+4(obuch)]x2;jeśli oba ataki się powiodą dla małego lub średniego celu następnuje pochłonięcie;60ft [12] ślepowidzenia;\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class RotMonster extends Enemy\n{   \n    shortInfo() {\n        return `[+7/2k8+4(obuch)]x2 \n        </br> pochłonięcie jeśli oba ataki się powiodły \n        <br/> 60ft [12] ślepowidzenia`;\n    };\n    // \"actions\": [\"multiattack\",\"smash\",\"absorption\"],\n    attackMultiattack() {\n        let html = 'Opis ataku wielokrotnego:';\n        html += '<br/> 2x walnięcie. Jeśli trafi dwa razy średni lub mały cel cel jest pochwycony';\n        html += '<br/> Cel może się próbować wysfobodzić o ST 14';\n        html += '<br/> Jeśli gnilec ma pochwyconą ofiarę może użyć przeciw niej pochłonięcia';\n\n        return html;\n    };\n    attackSmash() {\n        const testResult = this.getTestResult(7);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(8)*2, 4, 'Obrażenia obuchowe');\n\n        return html;\n    };\n    attackAbsorption() {\n        let html = 'Pochłonięta ustota (mała lub średnia) jest';\n        html += 'oślepiona, unieruchomiona i nie może oddychać';\n        html += '<br/> na początku każdej tury gnilca cel musi wykonać test obronny na kondycję';\n        html += '<br/> ST 14. Jeśli nie zda otrzymuje obrażenia 2k8+4 obuchowe';\n        html += '<br/> Gnilec może mieć tylko jedną wchłoniętą istotą w sobie';\n        html += '<br/> Gnilec może się z nią przemieszczać';\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class HillGiantGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(12)*10)+40;\n        return {\n            \"type\": \"hill-giant\",\n            \"name\": \"Gigant wzgórzowy\",\n            \"actions\": [\"rock\",\"greatclub\"],\n            \"statistics\": {\n                \"xp\": 1800,\n                \"kp\": 13,\n                \"currentHp\": hp, // 105\n                \"hp\": hp,\n                \"initiative\": this.k(20),\n                'pp': 12,\n                \"strength\": 21,\n                \"dexterity\": 8,\n                \"condition\": 19,\n                \"intelligence\": 5,\n                \"wisdom\": 9,\n                \"charisma\": 6,\n                \"speed\": \"40ft\",\n                \"i\": \"może wykonać dwa ataki maczugą; percepcja +2; jezyk giganci; \"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy.js\";\n\nexport default class HillGiant extends Enemy {\n    shortInfo() {\n        return `2x[+8/3k8+5(obuch)]\n        <br/> lub rzuca głazem na 18m/72m`;\n    };\n    // \"actions\": [\"greatclub\",\"rock\"],\n    attackRock() {\n        const testResult = this.getTestResult(8);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 2, 'Obrażenia kłute');\n        html += '<br/>zasięg 80/320 ft (18[ ]/72[ ])';\n\n        return html;\n    };\n    attackGreatclub() {\n        const testResult = this.getTestResult(8);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 4, 'Obrażenia obuchowe');\n\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class GuardGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8)*2)+2;\n        return {\n            \"type\": \"guard\",\n            \"name\": \"Strażnik\",\n            \"actions\": [\"spear\"],\n            \"statistics\": {\n                \"xp\": 25,\n                \"kp\": 16,\n                \"currentHp\": hp,\n                \"hp\": hp,\n                \"initiative\": this.k(20)+1,\n                'pp': 12,\n                \"strength\": 13,\n                \"dexterity\": 12,\n                \"condition\": 12,\n                \"intelligence\": 10,\n                \"wisdom\": 11,\n                \"charisma\": 10,\n                \"speed\": \"30ft\",\n                \"i\": \"może użyć dwuch rąk aby zaatakować włócznią\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class Guard extends Enemy {\n    shortInfo() {\n        return `włócznia +3: k6+1(kłute) \n            ma tarczę`;\n    };\n    attackSpear() {\n        const testResult = this.getTestResult(3);\n        let html = testResult.html;\n        html += this.generateDmg(this.k(6), 1, 'Obrażenia kłute');\n\n        return html;\n    };\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class BlackPuddingGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(10)*10)+30;\n        return {\n            \"type\": \"black-pudding\",\n            \"name\": \"Czarny pudding\",\n            \"actions\": [\"fake-nugget\"],\n            \"statistics\": {\n                \"xp\": 1100,\n                \"kp\": 7,\n                \"currentHp\": hp,\n                \"hp\": hp,\n                \"initiative\": this.k(20),\n                'pp': 8,\n                \"strength\": 16,\n                \"dexterity\": 5,\n                \"condition\": 16,\n                \"intelligence\": 1,\n                \"wisdom\": 6,\n                \"charisma\": 1,\n                \"speed\": \"20ft\",\n                \"i\": `+5 do trafienia: k6+3(obuch) + 4k8(kwas); -1 niemagiczny pancerz(10KP=zniszczony); 1k8(kwas) od dotknięcia lub ataku; niemagiczna broń koroduje\n                broń niemagiczna, metalowa i drewniana koroduje, dostaje -1 do rzutów na obrażenia (-5=zniszczona); amunicja niemagiczna przepada po zadaniu obrażeń;\n                reakcja: podział: może się podzielić po otrzymaniu obrażeń od elektryczności lub ciętych (minimum 10PW)`\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class BlackPudding extends Enemy {\n    shortInfo() {\n        return '+4: 2k6+2(nekr) -k4(STR)';\n    };\n    attackFakeNugget() {\n        // k6+3(obuch) + 4k8(kwas); -1 niemagiczny pancerz(10KP=zniszczony);\n        const testResult = this.getTestResult(5);\n        let html = testResult.html;\n        html += this.generateDmg(this.roll(6, 1), 3, 'obuch');\n        html += this.generateDmg(this.roll(8, 4), 0, 'kwas');\n        html += '<br/>-1 KP niemagiczny pancerz (10KP = zniszczony)';\n\n        return html;\n    };\n    renderInformation() {\n        let html = '';\n        const informations = this.i.split(';');\n        for (let k in informations) {\n            html += informations[k]+'</br></br>';\n        }\n        return html;\n    }\n}\n","import RandomHelper from \"../helpers/random-helper\";\n\nexport default class RusterGenerator extends RandomHelper {\n    getRandomObject(){\n        const hp = (this.k(8)*3)+20;\n        return {\n            \"type\": \"ruster\",\n            \"name\": \"Rdzewnik\",\n            \"actions\": [],\n            \"statistics\": {\n                \"xp\": 100,\n                \"kp\": 11,\n                \"currentHp\": hp,\n                \"hp\": hp,\n                \"initiative\": this.k(20),\n                'pp': 10,\n                \"strength\": 15,\n                \"dexterity\": 11,\n                \"condition\": 14,\n                \"intelligence\": 10,\n                \"wisdom\": 10,\n                \"charisma\": 11,\n                \"speed\": \"30ft\",\n                \"i\": \"2x atak mele; pack tactics;\"\n            }\n        }\n    };\n}","import Enemy from \"../basic/enemy\";\n\nexport default class Ruster extends Enemy {\n    shortInfo() {\n        return 'Rdzewnik gryzie ><';\n    };\n}\n","import AlsariphGenerator from \"../enemy-generators/alsariph-generator\";\nimport BanditCaptainGenerator from \"../enemy-generators/bandit-captain-generator\";\nimport BanditGenerator from \"../enemy-generators/bandit-generator\";\nimport HumGenerator from \"../enemy-generators/hum-generator\";\nimport KreaturaGenerator from \"../enemy-generators/kreatura-generator\";\nimport OmalenGenerator from \"../enemy-generators/omalen-generator\";\nimport Bandit from \"../enemy-type/bandit\";\nimport BanditCaptain from \"../enemy-type/bandit-captain\";\nimport Player from \"../enemy-type/Player\";\nimport DwarfGenerator from '../enemy-generators/dwarf-generator';\nimport Dwarf from '../enemy-type/dwarf';\nimport ScoutBanditGenerator from '../enemy-generators/scout-bandit-generator';\nimport ScoutBandit from '../enemy-type/scout-bandit';\nimport WoodGolemGenerator from '../enemy-generators/wood-golem-generator';\nimport WoodGolem from '../enemy-type/wood-golem';\nimport DogGenerator from '../enemy-generators/dog-generator';\nimport Dog from '../enemy-type/dog';\nimport GoblinGenerator from '../enemy-generators/goblin-generator';\nimport Goblin from '../enemy-type/goblin';\nimport HobgoblinGenerator from '../enemy-generators/hobgoblin-generator';\nimport Hobgoblin from '../enemy-type/hobgoblin';\nimport GnollGenerator from '../enemy-generators/gnoll-generator';\nimport Gnoll from '../enemy-type/gnoll';\nimport GnollPackLordGenerator from '../enemy-generators/gnoll-pack-lord-generator';\nimport GnollPackLord from '../enemy-type/gnoll-pack-lord';\nimport ShadowGenerator from '../enemy-generators/shadow-generator';\nimport Shadow from '../enemy-type/shadow';\nimport ThugGenerator from '../enemy-generators/thug-generator';\nimport Thug from '../enemy-type/thug';\nimport DwarfExtraGenerator from '../enemy-generators/dwarf-extra-generator';\nimport DwarfExtra from '../enemy-type/dwarf-extra';\nimport DarklingGenerator from '../enemy-generators/darkling-generator';\nimport Darkling from '../enemy-type/darkling';\nimport BarbarianGenerator from '../enemy-generators/barbarian-generator';\nimport Barbarian from '../enemy-type/barbarian';\nimport AnyoneGenerator from '../enemy-generators/anyone-generator';\nimport Anyone from '../enemy-type/anyone';\nimport DireWolfGenerator from '../enemy-generators/dire-wolf-generator';\nimport DireWolf from '../enemy-type/dire-wolf';\nimport HobgoblinCaptainGenerator from '../enemy-generators/hobgoblin-captain-generator';\nimport HobgoblinCaptain from '../enemy-type/hobgoblin-captain';\nimport RotMonsterGenerator from '../enemy-generators/rot-monster-generator';\nimport RotMonster from '../enemy-type/rot-monster';\nimport HillGiantGenerator from '../enemy-generators/hill-giant-generator';\nimport HillGiant from '../enemy-type/hill-giant';\nimport GuardGenerator from \"../enemy-generators/guard-generator\";\nimport Guard from \"../enemy-type/guard\";\nimport BlackPuddingGenerator from \"../enemy-generators/black-pudding-generator\";\nimport BlackPudding from \"../enemy-type/black-pudding\";\nimport RusterGenerator from \"../enemy-generators/ruster-generator\";\nimport Ruster from \"../enemy-type/ruster\";\n\nexport default class EnemyHelper {\n    pathToConfigFile = './storage/config/enemies-config-2308291905.json';\n    getRandomEnemyObjectByType(enemyType, customInitiative) {\n        const enemyObject = this.getClassObjectKindByTypeEnemy(enemyType, 'getGenerator');\n\n        return enemyObject.getRandomObject(customInitiative);\n    };\n    getEnemyObject(obj) {\n        return this.getClassObjectKindByTypeEnemy(obj.type, 'getEnemyObjectClass', obj);\n    };\n    /**\n     * Returns Enemy class object or Enemy-Generator class object for a entered type value.\n     */\n    getClassObjectKindByTypeEnemy(enemyType, requestKind = 'getGenerator', object = null) {\n        let classObjectReturned = null;\n        if ('getEnemyObjectClass' === requestKind) {\n            if (typeof object === \"undefined\" || null === object) {\n                console.log('\"object\" parameter is requered for this requestKind')\n            }\n        }\n        switch (enemyType) {\n            case 'bandit':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new BanditGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Bandit(object, this.appClass);\n                }\n                break;\n\n            case 'bandit-captain':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new BanditCaptainGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new BanditCaptain(object, this.appClass);\n                }\n                break;\n\n            case 'hum':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new HumGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Player(object, this.appClass);\n                }\n                break;\n\n            case 'omalen':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new OmalenGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Player(object, this.appClass);\n                }\n                break;\n\n            case 'kreatura':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new KreaturaGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Player(object, this.appClass);\n                }\n                break;\n\n            case 'alsariph':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new AlsariphGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Player(object, this.appClass);\n                }\n                break;\n\n            case 'dwarf':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new DwarfGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Dwarf(object, this.appClass);\n                }\n                break;\n\n            case 'scout-bandit':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new ScoutBanditGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new ScoutBandit(object, this.appClass);\n                }\n                break;\n\n            case 'wood-golem':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new WoodGolemGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new WoodGolem(object, this.appClass);\n                }\n                break;\n\n            case 'dog':\n                if ('getGenerator' === requestKind) {\n\n                    classObjectReturned = new DogGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Dog(object, this.appClass);\n                }\n                break;\n\n            case 'goblin':\n                if ('getGenerator' === requestKind) {\n\n                    classObjectReturned = new GoblinGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Goblin(object, this.appClass);\n                }\n                break;\n        \n            case 'hobgoblin':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new HobgoblinGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Hobgoblin(object, this.appClass);\n                }\n                break;\n\n            case 'gnoll':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new GnollGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Gnoll(object, this.appClass);\n                }\n                break;\n\n            case 'gnoll-pack-lord':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new GnollPackLordGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new GnollPackLord(object, this.appClass);\n                }\n                break;\n\n            case 'shadow':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new ShadowGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Shadow(object, this.appClass);\n                }\n                break;\n\n            case 'thug':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new ThugGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Thug(object, this.appClass);\n                }\n                break;\n\n            case 'dwarf-extra':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new DwarfExtraGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new DwarfExtra(object, this.appClass);\n                }\n                break;\n\n            case 'darkling':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new DarklingGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Darkling(object, this.appClass);\n                }\n                break;\n\n            case 'barbarian':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new BarbarianGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Barbarian(object, this.appClass);\n                }\n                break;\n\n            case 'anyone':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new AnyoneGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Anyone(object, this.appClass);\n                }\n                break;\n\n            case 'dire-wolf':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new DireWolfGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new DireWolf(object, this.appClass);\n                }\n                break;\n\n            case 'hobgoblin-captain':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new HobgoblinCaptainGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new HobgoblinCaptain(object, this.appClass);\n                }\n                break;\n\n            case 'rot-monster':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new RotMonsterGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new RotMonster(object, this.appClass);\n                }\n                break;\n            case 'hill-giant':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new HillGiantGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new HillGiant(object, this.appClass);\n                }\n                break;\n\n            case 'guard':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new GuardGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Guard(object, this.appClass);\n                }\n                break;\n\n            case 'black-pudding':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new BlackPuddingGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new BlackPudding(object, this.appClass);\n                }\n                break;\n\n            case 'ruster':\n                if ('getGenerator' === requestKind) {\n                    classObjectReturned = new RusterGenerator(this.appClass);\n                } else {\n                    classObjectReturned = new Ruster(object, this.appClass);\n                }\n                break;\n\n            default:\n                alert('Undefined enemy type: ' + enemyType);\n                break;\n        }\n\n        return classObjectReturned;\n    }\n    getAttackName(type) {\n        const result = this.getAttackDataFromConfigFile(type);\n\n        return result.name;\n    };\n    getAttackFunction(type) {\n        const result = this.getAttackDataFromConfigFile(type);\n\n        return result.function;\n    };\n    async getAttackDataFromConfigFile(type) {\n        try {\n          const response = await fetch(this.pathToConfigFile);\n          if (!response.ok) {\n            throw new Error(`Network response was not ok: ${response.status}`);\n          }\n          \n          const result = await response.json();\n          \n          let attackName = 'undefined';\n          let attackFunction = 'undefined';\n      \n          result.attackType.forEach(attack => {\n            if (type === attack.type) {\n              attackName = attack.name;\n              attackFunction = attack.function;\n            }\n          });\n      \n          return { name: attackName, function: attackFunction };\n        } catch (error) {\n          console.error('Error fetching data:', error);\n          return { name: 'undefined', function: 'undefined' };\n        }\n    };\n    setObjArrayFromTarget(collapseTarget) {\n        const target = document.getElementById(collapseTarget.getAttribute('data-parent-id'));\n      \n        if (!target) {\n          console.error('Target element not found.');\n          return null;\n        }\n      \n        const statistics = {\n          xp: target.getAttribute('data-xp'),\n          kp: target.getAttribute('data-kp'),\n          hp: target.getAttribute('data-hp'),\n          initiative: target.getAttribute('data-initiative'),\n          pp: target.getAttribute('data-pp'),\n          strength: target.getAttribute('data-strength'),\n          dexterity: target.getAttribute('data-dexterity'),\n          condition: target.getAttribute('data-condition'),\n          intelligence: target.getAttribute('data-intelligence'),\n          wisdom: target.getAttribute('data-wisdom'),\n          charisma: target.getAttribute('data-charisma'),\n          speed: target.getAttribute('data-speed'),\n          i: target.getAttribute('data-i')\n        };\n      \n        return {\n          type: target.getAttribute('data-type'),\n          name: target.getAttribute('data-name'),\n          actions: target.getAttribute('data-actions'),\n          statistics\n        };\n    };\n}\n","import React, { useEffect } from 'react';\nimport { useState } from \"react\";\nimport EnemyHelper from './helpers/enemy-helper';\n\nfunction BattlefieldElementList(props) {\n    const data = props.data;\n    const enemyHelper = new EnemyHelper();\n    const enemyObiect = enemyHelper.getClassObjectKindByTypeEnemy(data.type, 'class', data);\n    const [actionClass, setActionClass] = useState('d-none');\n    const [myStyle, setMyStyle] = useState({})\n    const [myStyleAction, setMyStyleAction] = useState({opacity: 0});\n    const [eClass, setEClass] = useState('');\n\n    useEffect(() => {\n        if (data.id === props.orderId) {\n            setEClass('btn');\n            let h = '140px';\n            if (0 == enemyObiect.shortInfo().length) {\n                h = '120px';\n            }\n            setMyStyle({\n                backgroundColor: 'var(--secondary-color)', \n                height: h}\n            );\n        } else {\n            setEClass('d-none');\n            setMyStyle({});\n        }\n    }, [props.orderId, data.id]);\n    \n    const showOrHiddenAction = () => {\n        // TODO: obliczać wysokość elementu\n        const style = {backgroundColor: 'var(--secondary-color)', height: 'auto'};\n        if ('d-none' === actionClass) {\n            // show\n            // style.height = '130px';\n            setMyStyle(style);\n            setActionClass('block');\n            setTimeout(() => {\n                setMyStyleAction({opacity: 1});\n            }, 100);\n        } else {\n            // hidden\n            setMyStyleAction({opacity: 0});\n            setTimeout(() => {\n                // style.height = '50px';\n                setMyStyle(style);\n                setActionClass('d-none');\n            }, 100);\n        }\n    }\n\n    return (\n        <div className={eClass} style={myStyle}>\n\n            {data.lp}. - {data.name} - {data.statistics.initiative}\n\n            <div className='btn shortInfo' onClick={showOrHiddenAction}>\n                {enemyObiect.shortInfo()}\n            </div>\n\n            <div className={actionClass+' transition-opacity informationClass'} style={myStyleAction}>\n                {data.actions.map(action => (\n                    <div key={action}>{action}</div>\n                ))}\n                {enemyObiect.renderInformation()}\n            </div>\n\n            <div\n                className={'btn '+eClass}\n                style={{backgroundColor: 'var(--gray-color)'}}\n                onClick={() => {props.nextElement(data.id+1)}}\n            >\n                next\n            </div>\n        </div>\n    );\n}\n\nexport default BattlefieldElementList;","\nexport default class ConstHelper\n{\n    static getWidthApp() {\n        return window.innerWidth;\n    }\n\n    static getHeightApp() {\n        return 1500;\n    }\n}\n\n","import React, { useEffect, useState } from 'react';\nimport BattlefieldStorage from './basic/battlefield-storage';\nimport BattlefieldElementList from \"./BattlefieldElementList\";\nimport ConstHelper from './helpers/constHelper';\n\nfunction Battle(props) {\n    const [orderId, setOrderId] = useState(props.currElID);\n    const [myStyle, setMyStyle] = useState({width: ConstHelper.getWidthApp()})\n    useEffect(() => {\n        if ('Battle' === props.activeStep) {\n            setMyStyle({width: ConstHelper.getWidthApp()});\n        } else {\n            setMyStyle({width: ConstHelper.getWidthApp(), left: ConstHelper.getWidthApp()});\n        }\n    }, [props.activeStep]);\n\n    // eslint-disable-next-line\n    const battlefield = new BattlefieldStorage();\n\n    useEffect(() => {\n        if (battlefield.getLastActiveID() < orderId) {\n            setOrderId(battlefield.getFirstActiveID());\n        }\n    }, [orderId, battlefield]);\n\n    return (\n        <div className='panel' style={myStyle}>\n            <div className='btn' style={{backgroundColor: 'var(--second-gray-color)'}}\n                onClick={() => {props.changeVisible('PreparingToBattle')}}\n            >\n                Powrót\n            </div>\n            { null !== props.content ? props.content.map(item => (\n\n                <BattlefieldElementList key={item.id} data={item} orderId={orderId} \n                    nextElement={setOrderId}/>\n                \n            )) : <div style={{color: 'black'}}>Pole bitwy jest puste <br/> ... </div> }\n        </div>\n    );\n}\n\nexport default Battle;","import React from \"react\";\n\nfunction Logo () {\n    \n    return (\n        <span>\n            <img\n                className=\"avatar\"\n                src=\"./DnDIcon2.png\"\n                alt={'App DnDHelper Icon'}\n                style={{\n                    width: '5em',\n                    heigth: '5em'\n                }}\n            />\n            <h3 className=\"avatarLabel\">Dangeon & Dragons<br/>Master Helper</h3>\n        </span>\n    );\n}\n\nexport default Logo;","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport Logo from './Logo';\nimport ConstHelper from './helpers/constHelper';\n\nfunction Home(props) {\n    const [myStyle, setMyStyle] = useState({width: ConstHelper.getWidthApp()});\n    useEffect(() => {\n       if ('Home' === props.activeStep) {\n            setMyStyle({width: ConstHelper.getWidthApp()});\n       } else {\n            setMyStyle({width: ConstHelper.getWidthApp(), left: -ConstHelper.getWidthApp()});\n       }\n    }, [props.activeStep]);\n\n    return (\n        <div className='panel' style={myStyle}>\n            <Logo />\n            <div className=\"btn\"\n                style={{backgroundColor: 'var(--primary-color)'}}\n                onClick={() => {props.changeVisible('PreparingToBattle')}}\n            >\n                Przygotowania do bitwy\n            </div>\n            <div className=\"btn\"\n                style={{backgroundColor: 'var(--secondary-color)'}}\n                onClick={() => {props.changeVisible('Rules')}}\n            >\n                Podręcznik\n            </div>\n            <div className=\"btn\"\n                style={{backgroundColor: 'var(--second-gray-color)'}}\n                onClick={() => {props.changeVisible('Settings')}}\n            >\n                Ustawienia\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\n\nfunction BackToHome(props) {\n    return (\n        <div className='btn' style={{backgroundColor: 'var(--second-gray-color)'}}\n            onClick={() => {props.changeVisible('Home')}}\n        >\n            Powrót\n        </div>\n    )\n}\n\nexport default BackToHome;","import React from 'react';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nfunction EnemyList(props) {\n    const [jsonData, setJsonData] = useState(null);\n    const [enemiesGroups, setEnemiesGroups] = useState(null);\n    const pathToConfigFile = process.env.REACT_APP_CONFIG_PATH;\n  \n    useEffect(() => {\n      // Pobieramy dane z pliku JSON z użyciem axios\n      axios.get(pathToConfigFile)\n        .then((response) => {\n          setJsonData(response.data); // Ustawiamy dane w stanie komponentu\n        })\n        .catch((error) => {\n          console.error('Błąd podczas pobierania danych JSON:', error);\n        });\n    }, [pathToConfigFile]);\n\n    useEffect(() => {\n        if (null !== jsonData) {\n            const enemiesContentGroup = jsonData.group.map((group, index) => (\n                <details key={index} className=\"details\">\n                    <summary className=\"btn\" style={{backgroundColor: 'var(--gray-color)'}}>\n                        {group.name}\n                    </summary>\n                    <p className=\"details__p\">\n                    {group.content.map((enemyElement, k2) => (\n                        <button\n                          key={k2}\n                          className={`btn ${enemyElement.btnClass} btn-sm js-enemy`}\n                          style={{backgroundColor: 'var(--second-gray-color)'}}\n                          data-type={enemyElement.type}\n                          type=\"button\"\n                          onClick={() => {props.add(enemyElement)}}\n                        >\n                        {`${enemyElement.name} - ${enemyElement.EXP}`}\n                        </button>\n                    ))}\n                    </p>\n                </details>\n            ));\n            setEnemiesGroups(enemiesContentGroup);\n        }\n    }, [jsonData, props]);\n\n    return (\n      <>\n        {jsonData ? (\n          enemiesGroups\n        ) : (\n          <p>Ładowanie danych...</p>\n        )}\n      </>\n    );\n}\n\nexport default EnemyList;","import React, { useState } from 'react';\n\nfunction PlayerList (props) {\n    const { players } = props;\n    const [customInitiative, setCustomInit] = useState(0);\n    const addPlayerToBattlefield = (playerCode) => {\n        props.add({type: playerCode}, +customInitiative)\n    }\n\n    return (\n        <div>\n            <input className=\"btn\" style={{width: '85%', fontSize: '1em'}}\n                placeholder=\"inicjatywa gracza\"\n                type=\"number\" min=\"0\" max=\"100\" step=\"0.1\" \n                onKeyUp={(e) => {setCustomInit(e.target.value)}}\n                onClick={(e) => {e.target.value = '';}}\n            />\n            <div style={{display: 'grid', gridTemplateColumns: 'auto auto', padding: '1em'}}>\n                {players.map((player, k) => (\n                    <div\n                        key={k}\n                        className=\"btn\"\n                        style={{backgroundColor: 'var(--secondary-color)'}}\n                        data-type={player}\n                        // type=\"button\"\n                        onClick={() => {addPlayerToBattlefield(player)}}\n                    >\n                        {player}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default PlayerList;\n","import React, { useEffect, useState } from \"react\";\n\nfunction STCounter(props) {\n    const { playersCount, enemyCounter, expSummary, enemyList } = props;\n    const [ST, setST] = useState('---');\n    const [enemySpecular, setEnemySpecular] = useState(expSummary);\n\n    useEffect(() => {\n        if (2 > enemyCounter) {\n            setEnemySpecular(expSummary);\n        }\n        if (2 === enemyCounter) {\n            setEnemySpecular(expSummary * 1.5);\n        }\n        if (3 <= enemyCounter && 6 >= enemyCounter) {\n            setEnemySpecular(expSummary * 2);\n        }\n        if (7 <= enemyCounter && 10 >= enemyCounter) {\n            setEnemySpecular(expSummary * 2.5);\n        }\n        if (11 <= enemyCounter && 14 >= enemyCounter) {\n            setEnemySpecular(expSummary * 3);\n        }\n        if (15 < enemyCounter) {\n            setEnemySpecular(expSummary * 4);\n        }\n    }, [expSummary, enemyCounter]);\n\n    useEffect(() => {\n        let actualST = ST;\n        const lvl = 5;\n        let rangeEasy = 25;\n        let rangeMedium = 50;\n        let rangeHard = 75;\n        let rangeDead = 100;\n        switch (lvl) {\n            case 4:\n                rangeEasy = 125;\n                rangeMedium = 250;\n                rangeHard = 375;\n                rangeDead = 500;\n                break;\n\n            case 5:\n                rangeEasy = 250;\n                rangeMedium = 500;\n                rangeHard = 750;\n                rangeDead = 1100;\n                break;\n        \n            default:\n                break;\n        }\n        if ((rangeEasy*playersCount) > enemySpecular) {\n            actualST = '---';\n        }\n        if ((rangeEasy*playersCount) <= enemySpecular) {\n            actualST = 'łatwe';\n        }\n        if ((rangeMedium*playersCount) <= enemySpecular) {\n            actualST = 'przeciętne';\n        }\n        if ((rangeHard*playersCount) <= enemySpecular) {\n            actualST = 'trudne';\n        }\n        if ((rangeDead*playersCount) <= enemySpecular) {\n            actualST = 'zabójcze';\n        }\n        setST(actualST);\n    }, [enemySpecular, playersCount, ST]);\n\n    return (\n        <div>\n            <div className=\"btn second-font\" onClick={props.refreshEnemList} style={{backgroundColor: 'var(--primary-color)'}}>\n                {enemyList}\n            </div>\n            <div className=\"btn-left\" style={{backgroundColor: 'var(--secondary-color)'}}>\n                PW: <br/>\n                {ST}\n            </div>\n            <div className=\"btn-right\" style={{backgroundColor: 'var(--secondary-color)'}}>\n                licznik: <br/>\n                {expSummary}\n            </div>\n            <div style={{clear: 'both'}} ></div>\n        </div>\n    );\n}\n\nexport default STCounter;","import React, { useEffect, useState } from 'react';\nimport BackToHome from './BackToHome';\nimport BattlefieldStorage from \"./basic/battlefield-storage\";\nimport EnemyList from \"./EnemyList\";\nimport ConstHelper from './helpers/constHelper';\nimport EnemyHelper from \"./helpers/enemy-helper\";\nimport PlayerList from './PlayerList';\nimport STCounter from \"./STCounter\";\n\nfunction PreparingToBattle(props) {\n\n    // eslint-disable-next-line\n    const battlefield = new BattlefieldStorage();\n    // default players list\n    const playerList = ['alsariph', 'omalen', 'kreatura', 'hum'];\n    // total DC / EXP of selected enemies\n    const [EXPcounter, setEXPCounter] = useState(battlefield.getST());\n    // list of participant battle (only a names)\n    const [selectedEnemies, setSelectedEnemies] = useState('Lista przeciwników');\n    // counter generated enemies to the battlefield\n    const [enemyCount, setEnemyCount] = useState(null !== battlefield.get() ? battlefield.get().length : 0);\n    const [myStyle, setMyStyle] = useState({width: ConstHelper.getWidthApp()});\n\n    useEffect(() => {\n        if ('PreparingToBattle' === props.activeStep) {\n            setMyStyle({width: ConstHelper.getWidthApp()})\n        } else if ('Battle' === props.activeStep) {\n            setMyStyle({width: ConstHelper.getWidthApp(), left: -ConstHelper.getWidthApp()})\n        } else {\n            setMyStyle({width: ConstHelper.getWidthApp(), left: ConstHelper.getWidthApp()})\n        }\n    }, [props.activeStep])\n\n    // add enemy to the storage and prepare settings around.\n    const addEnemy = (enemy, initiative = null) => {\n        if (!playerList.includes(enemy.type)) {\n            setEXPCounter(prevCounter => prevCounter + enemy.EXP);\n            setEnemyCount(c => c + 1);\n        }\n        const enemyHelper = new EnemyHelper();\n        const newEnemy = enemyHelper.getRandomEnemyObjectByType(enemy.type, initiative);\n        battlefield.store(newEnemy);\n        setSelectedEnemyList();\n    };\n\n    const setSelectedEnemyList = () => {\n        const selectedEnemy = battlefield.get();\n        if (null !== selectedEnemy) {\n            setSelectedEnemies(selectedEnemy.length + ': ');\n            selectedEnemy.map((currentSelected) => {\n                // TODO: zrobić usuwanie elementu po kliknięciu.\n                setSelectedEnemies(selectedEnemies => selectedEnemies + ' | ' + currentSelected.name);\n                return true;\n            });\n        }\n    }\n\n    const startBattle = () => {\n        let battleList = null;\n        let currElemID = null;\n        if (null !== battlefield.get()) {\n            battlefield.sortByInitiative();\n            currElemID = battlefield.getGameProcess();\n            if (null === currElemID) {\n                battlefield.setGameProcess({currentElementID: 0});\n            }\n            if (currElemID > battlefield.getLastActiveID()) {\n                currElemID = 0;\n            }\n            battleList = battlefield.get();\n        }\n        props.setBattlefield(battleList, currElemID);\n        props.changeVisible('Battle');\n    };\n\n    const clear = () => {\n        battlefield.clearBFStorage();\n        setEXPCounter(0);\n        setEnemyCount(0);\n        setSelectedEnemies('Lista przeciwników');\n    };\n\n    return (\n        <div className='panel' style={myStyle}>\n        <BackToHome changeVisible={props.changeVisible} activeStep={props.activeStep} />\n            <STCounter\n                playersCount={playerList.length}\n                enemyCounter={enemyCount}\n                expSummary={EXPcounter}\n                enemyList={selectedEnemies}\n                refreshEnemList={setSelectedEnemyList}\n            />\n            <div\n                className=\"btn\" style={{backgroundColor: 'var(--primary-color)'}} \n                onClick={startBattle}\n            >\n                Start\n            </div>\n            <div className=\"btn\" style={{backgroundColor: 'var(--gray-color)'}} onClick={clear}>Wyzeruj</div>\n            <PlayerList players={playerList} add={addEnemy} />\n            <EnemyList add={addEnemy} />\n        </div>\n    );\n}\n\nexport default PreparingToBattle;","import React, { useEffect, useState } from 'react';\nimport BackToHome from './BackToHome';\nimport ConstHelper from './helpers/constHelper';\n\nfunction Rules(props) {\n    const [myStyle, setMyStyle] = useState({width: ConstHelper.getWidthApp()});\n    const [content, setContent] = useState('Streszczenie zasad');\n    const [rule1Class, set1Class] = useState('d-none');\n    const [rule2Class, set2Class] = useState('d-none');\n    const [rule3Class, set3Class] = useState('d-none');\n    const [rule4Class, set4Class] = useState('d-none');\n    const [rule5Class, set5Class] = useState('d-none');\n    const [rule6Class, set6Class] = useState('d-none');\n    const [rule7Class, set7Class] = useState('d-none');\n    const [rule8Class, set8Class] = useState('d-none');\n\n    const changeRule = (title) => {\n        setContent(title);\n        set1Class('d-none');\n        set2Class('d-none');\n        set3Class('d-none');\n        set4Class('d-none');\n        set5Class('d-none');\n        set6Class('d-none');\n        set7Class('d-none');\n        set8Class('d-none');\n    }\n\n    useEffect(() => {\n        if ('Rules' === props.activeStep) {\n            setMyStyle({width: ConstHelper.getWidthApp()});\n        } else {\n            setMyStyle({width: ConstHelper.getWidthApp(), left: ConstHelper.getWidthApp()});\n        }\n    }, [props.activeStep]);\n\n    return (\n        <div className=\"panel\" style={myStyle}>\n            <BackToHome changeVisible={props.changeVisible} />\n            <div className='btn' style={{backgroundColor: 'var(--secondary-color)'}}>\n                <div onClick={() => changeRule('Streszczenie zasad')}>{content}</div>\n                <div className={rule1Class}>\n                    tutaj jest do zrobienia moduł do liczenia odległości ...\n                </div>\n                <div className={rule2Class}>\n                    tutaj jest do zrobienia moduł obliczania zasięgów\n                </div>\n                <div className={rule3Class}>\n                    <details>\n                        <summary>Siła</summary>\n                        <ul>\n                            <li>\n                                Czysta siła fizyczna. Łamanie, ciągnięcie, dźwiganie itp.\n                            </li>\n                            <li>\n                                Trzymanie się powierzchni wspinaczki, gdy ktoś próbuje Cię zepchnąć.\n                            </li>\n                            <li>\n                                Szczególnie daleki skok. Pływanie w wirach.\n                            </li>\n                            <li>\n                                Wyrywanie się z więzów czy wyważanie drzwi.\n                            </li>\n                            <li>\n                                Trzymanie się wozu gdy się go trzymasz i ciągnie Cię on po ziemi\n                            </li>\n                        </ul>\n                    </details>\n                    <ul>\n                        <li>Atletyka</li>\n                    </ul>\n                    <details>\n                        <summary>Zręczność</summary>\n                        <ul>\n                            <li>\n                                Refleks, zwinność i równowaga.\n                            </li>\n                            <li>\n                                Szybkie lub ciche poruszanie się. Utrzymanie równowagi na chwiejnym podłożu.\n                            </li>\n                            <li>\n                                Kradzież przedmiotu lub ukrywanie go u siebie.\n                            </li>\n                            <li>\n                                Prowadzenie pojazdów. Rozbrajanie pułapek. Umiejętne związanie jeńca.\n                            </li>\n                            <li>\n                                Wyswabadzanie się z więzów.\n                            </li>\n                            <li>\n                                Wytwarzanie małego lub bogatego w szczegóły przedmiotu.\n                            </li>\n                        </ul>\n                    </details>\n                    <ul>\n                        <li>Akrobatyka</li>\n                        <li>Skradanie się</li>\n                        <li>Zwinne dłonie</li>\n                    </ul>\n                    <details>\n                        <summary>Kondycja</summary>\n                        <p>\n                            Miara zdrowia, wigoru i sił witalnych. Raczej rozpatrzywany paswnie ale zdarzają się sytuacje\n                            kiedy bohater musi przezwyciężyć swoje ograniczenia ciała. Wówczas można wykonać test kondycji.\n                        </p>\n                        <ul>\n                            <li>\n                                Wstrzymywanie oddechu\n                            </li>\n                            <li>\n                                wielogodzinny marsz lub praca bez odpoczynku\n                            </li>\n                            <li>\n                                funkcjonowanie bez snu lub bez jedzenia i picia\n                            </li>\n                            <li>\n                                wypicie duszkiem całego kufla piwa\n                            </li>\n                        </ul>\n                    </details>\n                    <ul>\n                        <li>---</li>\n                    </ul>\n                    <details>\n                        <summary>Inteligencja</summary>\n                        <ul>\n                            <li>\n                                Porozumiewanie się z istotami bez użycia słów.\n                            </li>\n                            <li>\n                                Wycena drogocennego przedmiotu\n                            </li>\n                            <li>\n                                Przygotowanie wiarygodnego przebrania strażnika miejsckiego\n                            </li>\n                            <li>\n                                Wygrać w potyczce intelektualnej \n                            </li>\n                            <li>\n                                Odwołać się w rozmowe do swojej wiedzy rzemieślniczej.\n                            </li>\n                        </ul>\n                    </details>\n                    <ul>\n                        <li>Historia</li>\n                        <li>Przyroda</li>\n                        <li>Religia</li>\n                        <li>Śledztwo</li>\n                        <li>Wiedza tajemna</li>\n                    </ul>\n                    <details>\n                        <summary>Mądrość</summary>\n                        \n                        <ul>\n                            <li>\n                                Spostrzegawczość i wyczucie. Dostrzeganie mowy ciała i empatia.\n                            </li>\n                            <li>\n                                Diagnozowanie choroby. Stabilizacja chorego.\n                            </li>\n                            <li>\n                                Omijanie trudnego terenu albo znajdujesz ślady bandytów czy jakiegoś potwora.\n                            </li>\n                            <li>\n                                Przewidywanie jaki wybór może okazać się lepszy \n                            </li>\n                            <li>\n                                Oceniasz czy np. leżące martwe ciało to nieumarły\n                            </li>\n                        </ul>\n                        \n                    </details>\n                    <ul>\n                        <li>Intuicja</li>\n                        <li>Medycyna</li>\n                        <li>Opieka nad zwierzętami</li>\n                        <li>Percepcja</li>\n                        <li>Sztuka przetrwania</li>\n                    </ul>\n                    <details>\n                        <summary>\n                            Charyzma\n                        </summary>\n                        \n                            <ul>\n                                <li>\n                                    Skuteczność interakcji społecznych. Wpływowość lub wręcz przeciwnie, podporządkowywanie się innym.\n                                </li>\n                                <li>\n                                    Skuteczność kłamstw albo umiejętność rozmów w specyficznej atmosferze.\n                                </li>\n                                <li>\n                                    Zorientowanie się w głównych tematach rozmów w karczmie\n                                </li>\n                                <li>\n                                    Znalezienie osoby, z którą warto porozmawiać o plotkach czy krążących informacjach w mieście. \n                                </li>\n                            </ul>\n                        \n                    </details>\n                    <ul>\n                        <li>Perswazja</li>\n                        <li>Oszustwo</li>\n                        <li>Występy</li>\n                        <li>Zastraszanie</li>\n                    </ul>\n                </div>\n                <div className={rule4Class}>\n                        Trzeba mieć się gdzie ukryć. W trakcie walki raczej postaci są skupione na celach i nie da się ukryć w jej trakcie.\n                        Żeby się podkraść również muszą być spełnione minimalne warunki ukrycia się.\n                        <br/>\n                        Kiedy się ukrywasz i ktoś spodziewa się ciebie rozwiązuje się to testem spornym:\n                        <br/>\n                        Skradanie się vs Percepcja.\n                        <br/>\n                        Jeśli podkradający się nie jest spodziewanym gościem wystarczy, że on rzuci.\n                        Wynik testu jest konfrontowany z pasywną percepcją osób do których się podkrada.\n                    </div>\n                <div className={rule5Class}>\n                        <p>\n                            Pułapka musi mieć określony stopień trudności wykrycia\n                            oraz stopień trudności rozbrojenia. Często obie te rzeczy są podbnie trudne.\n                            <br/>\n                            Niektóre działania graczy mogę z zasady odkrywać pułapki i nie potrzeba wówczas kazać im rzuacć testu.\n                            <br/>\n                        </p>\n                        Przykładowe pułapki:\n                        <ul>\n                            <li>\n                                mechaniczne:\n                                <ol>\n                                    <li>\n                                        <details>\n                                            <summary>Prosty dół</summary>\n                                            <p>\n                                                Dzira w ziemi min 3m obrażenia zależne od głębkości.\n                                                ST dostrzerzenia: 10\n                                            </p>\n                                        </details>\n                                    </li>\n                                    <li>\n                                        <details>\n                                            <summary>Spadająca sieć</summary>\n                                            <p>\n                                                Pulapka wykorzystuje napiętą linke, ktora po szarpnieciu\n                                                uwalnia sic zawieszona pod sufitem.\n                                                Linka jest rozpieta 7,5 centymetra nad ziemia miedzy\n                                                dwoma kolumnami albo drzewami. Sieć jest zakryta\n                                                pajeczynami albo listowiem. ST dostrzezenia linki i sieci\n                                                to 10. Udany test Zrecznosci o ST 15 z uzyciem narzedzi\n                                                zlodziejskich unieszkodliwia pulapke. Postac bez narzedzi\n                                                zlodziejskich moze posluzyé sie dowolnym ostrzem narze-\n                                                dzia lub broni, ale wykonuje test z utrudnieniem. Nieudany\n                                                test uruchamia pulapke.\n                                                Wyzwolenie pulapki powoduje, ze sieé spada i pokrywa\n                                                obszar kwadratu o boku 3 metrów. Stworzenia na tym\n                                                obszarze zostaja uwiezione pod siecia i unieruchomione,\n                                                musza takze wykonac rzut obronny na Site o ST 10.\n                                                W przypadku niepowodzenia zostaja powalone. Stworzenie\n                                                moze w ramach swojej akcji wykonac test Sily o SI 10.\n                                                W przypadku sukcesu uwalnia siebie abo inna istote. Siec\n                                                ma KP 10 i 20 PW. Jesli siec otrzyma 5 obrazer cietych, to\n                                                jedna kwadratowa część o boku 1,5 metra zostaje zniszczona,\n                                                a uwiezione pod nia stworzenia uwolnione.\n                                            </p>\n                                        </details>\n                                        \n                                    </li>\n                                    <li>\n                                        koszące ostrza\n                                    </li>\n                                    <li>\n                                        spadająca sieć\n                                    </li>\n                                    <li>\n                                        zatrute strzałki\n                                    </li>\n                                </ol>\n                            </li>\n                            <li>\n                                megiczne:\n                                <ol>\n                                    <li>\n                                        duszące pnącza\n                                    </li>\n                                </ol>\n                            </li>\n                        </ul>\n                        <br/>\n                        Tabele rzutu obronnego:\n                        <table className=\"tg\">\n                            <thead>\n                              <tr>\n                                <th className=\"tg-0lax\">Moc pułapki</th>\n                                <th className=\"tg-0lax\">ST rzutu obronnego</th>\n                                <th className=\"tg-0lax\">Premia do ataku</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr>\n                                <td className=\"tg-0lax\">Uciążliwa</td>\n                                <td className=\"tg-0lax\">10-11</td>\n                                <td className=\"tg-0lax\">+3 do +5</td>\n                              </tr>\n                              <tr>\n                                <td className=\"tg-0lax\">Niebezpieczna</td>\n                                <td className=\"tg-0lax\">12-15</td>\n                                <td className=\"tg-0lax\">+6 do +8</td>\n                              </tr>\n                              <tr>\n                                <td className=\"tg-0lax\">Zabójcza</td>\n                                <td className=\"tg-0lax\">16-20</td>\n                                <td className=\"tg-0lax\">+9 do +12</td>\n                              </tr>\n                            </tbody>\n                        </table>\n\n                        <br/>\n                        Tabela obrażeń wg poziomu i dotkliwości:\n                        <table className=\"tg\">\n                            <thead>\n                              <tr>\n                                <th className=\"tg-0lax\">Poziom postaci</th>\n                                <th className=\"tg-0lax\">Uciążliwa</th>\n                                <th className=\"tg-0lax\">Niebezpieczna</th>\n                                <th className=\"tg-0lax\">Zabójcza</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr>\n                                <td className=\"tg-0lax\">1-4</td>\n                                <td className=\"tg-0lax\">1k10</td>\n                                <td className=\"tg-0lax\">2k10</td>\n                                <td className=\"tg-0lax\">4k10</td>\n                              </tr>\n                              <tr>\n                                <td className=\"tg-0lax\">5-10</td>\n                                <td className=\"tg-0lax\">2k10</td>\n                                <td className=\"tg-0lax\">4k10</td>\n                                <td className=\"tg-0lax\">10k10</td>\n                              </tr>\n                              <tr>\n                                <td className=\"tg-0lax\">11-16</td>\n                                <td className=\"tg-0lax\">4k10</td>\n                                <td className=\"tg-0lax\">10k10</td>\n                                <td className=\"tg-0lax\">18k10</td>\n                              </tr>\n                              <tr>\n                                <td className=\"tg-0lax\">17-20</td>\n                                <td className=\"tg-0lax\">10k10</td>\n                                <td className=\"tg-0lax\">18k10</td>\n                                <td className=\"tg-0lax\">24k10</td>\n                              </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                <div className={rule6Class}>\n                    duża lub mniejsza istota trafiona siecią zostaje unieruchomiona.\n                    Trafione stworzenie może wykorzystać akcją na wykonanie testu siły o ST 10\n                    by uwolnić siebie lub inną istotę znajdującą się w jej strefie ataku.\n                    Zadanie sieci 5pkt obrażeń ciętych (KP10) uwalnia stowrzenie bez robienia mu przywdy\n                    kończącstan unieruchomienia i niszcząc sieć.\n                    Można rzucić sieć tylko raz w ramach swojej akcji, akcji dodatkowej lub reakcji przeznaczonej na atak.\n                </div>\n                <div className={rule7Class}>\n                    zaklęcie \"Blinded\" (Zaślepienie) jest stanem, w którym stworzenie jest pozbawione zdolności widzenia.<br/>\n                    Osoba, stworzenie lub potwór, które jest oślepione, ma następujące cechy:<br/><br/>\n                    <ul>\n                        <li>\n                            Automatycznie niezdolność do wykonywania rzutów ataku: Postać oślepiona ma dezorientację w walce i rzutów ataku przeciwko przeciwnikom wykonuje z ułomnością, co oznacza, że rzuty ataku mają wówczas wady (rzuca się dwiema kostkami i bierze mniejszą wartość). Również rzuty ataku przeciwko postaci oślepionej mają przewagę, co oznacza, że przeciwnik rzuca dwiema kostkami i bierze większą wartość.\n                        </li>\n                        <li>\n                            Automatycznie niezdolność do korzystania ze zdolności związanych ze wzrokiem: Postać oślepiona nie może korzystać ze zdolności opartych na wzroku, takich jak czytanie, wykrywanie ukrytych przeciwników czy rozpoznawanie otoczenia.\n                        </li>\n                        <li>\n                            Rzuty obronne z woli: W niektórych przypadkach postać oślepiona może mieć korzyści w obronie przed zaklęciami lub zdolnościami, które wymagają rzutu obronnego na Woli.\n                        </li>\n                    </ul>\n                </div>\n                <div className={rule8Class}>\n                    Postać otrzymuje 1k6 obrażeń obuchowych od upadku za każde 3 metry (max 20k6). Ponadto bohater jest powalony.</div>\n            </div>\n            <div style={{margin: '.5em', display: 'grid', gridTemplateColumns: '50% 50%', gridTemplateRows: 'auto auto'}}>\n                <div onClick={() => {changeRule('Kalkulator odległości'); set1Class('activeRuleContent')}} \n                    className='rules-grid-element' style={{backgroundColor: 'var(--gray-color)'}}>\n                    Kalkulator odległości\n                </div>\n                <div onClick={() => {changeRule('Typy broni i zasięgi'); set2Class('activeRuleContent')}} \n                    className='rules-grid-element' style={{backgroundColor: 'var(--gray-color)'}}>\n                    Typy broni i zasięgi\n                </div>\n                <div onClick={() => {changeRule('Testy Atrybutów'); set3Class('activeRuleContent')}}\n                    className='rules-grid-element' style={{backgroundColor: 'var(--gray-color)'}}>\n                    Testy Atrybutów\n                </div>\n                <div onClick={() => {changeRule('Ukrywanie się'); set4Class('activeRuleContent')}} \n                    className='rules-grid-element' style={{backgroundColor: 'var(--gray-color)'}}>\n                    Ukrywanie się\n                </div>\n                <div onClick={() => {changeRule('Pułapki'); set5Class('activeRuleContent')}} \n                    className='rules-grid-element' style={{backgroundColor: 'var(--gray-color)'}}>\n                    Pułapki\n                </div>\n                <div onClick={() => {changeRule('Upadek'); set6Class('activeRuleContent')}} \n                    className='rules-grid-element' style={{backgroundColor: 'var(--gray-color)'}}>\n                    Upadek\n                </div>\n                <div onClick={() => {changeRule('Zaślepienie'); set7Class('activeRuleContent')}}\n                    className='rules-grid-element' style={{backgroundColor: 'var(--gray-color)'}}>\n                    Zaślepienie\n                </div>\n                <div onClick={() => {changeRule('Sieć'); set8Class('activeRuleContent')}} \n                    className='rules-grid-element' style={{backgroundColor: 'var(--gray-color)'}}>\n                    Sieć\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Rules;","import React, { useEffect, useState } from 'react';\nimport BackToHome from './BackToHome';\nimport ConstHelper from './helpers/constHelper';\n\nfunction Settings (props) {\n    const [myStyle, setMyStyle] = useState({width: ConstHelper.getWidthApp()});\n\n    useEffect(() => {\n        if ('Settings' === props.activeStep) {\n            setMyStyle({width: ConstHelper.getWidthApp()});\n        } else {\n            setMyStyle({width: ConstHelper.getWidthApp(), left: ConstHelper.getWidthApp()});\n        }\n    }, [props.activeStep]);\n\n    return (\n        <div className='panel' style={myStyle}>\n            <BackToHome changeVisible={props.changeVisible} />\n            <div className='btn' style={{backgroundColor: 'var(--primary-color)'}}>\n                Ustawienia\n            </div>\n        </div>\n    );\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Battle from './Battle';\nimport ConstHelper from './helpers/constHelper';\nimport Home from './Home';\nimport PreparingToBattle from './PreparingToBattle';\nimport Rules from './Rules';\nimport Settings from './Settings';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // component list\n      possibleSteps: ['Home', 'PreparingToBattle', 'Rules', 'Battle', 'Settings'],\n      // default visible component\n      visibleStep: 'Home',\n      // Battlefield content - list of enemies and players\n      battlefieldContent: null,\n      // state game process like as actual enemy tour\n      gameProcess: {currentElementID: 0}\n    };\n  };\n  \n  setVisibleStep = (step) => {\n    if (this.state.possibleSteps.includes(this.state.visibleStep)) {\n      this.setState({\n        visibleStep: step\n      });\n    } else {\n      throw new Error(`Undefined step \"${step}\"`);\n    }\n  };\n\n  // this is switch between PreparingToBattle and Battle elements\n  setBattlefieldContent = (jsonData, currentElementID) => {\n    this.setState({\n      battlefieldContent: jsonData,\n      gameProcess: {currentElementID: currentElementID}\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\"  style={{width: ConstHelper.getWidthApp(), minHeight: ConstHelper.getHeightApp(), height: 'auto'}}>\n        <Home changeVisible={this.setVisibleStep} activeStep={this.state.visibleStep} />\n        <PreparingToBattle\n          changeVisible={this.setVisibleStep}\n          activeStep={this.state.visibleStep}\n          setBattlefield={this.setBattlefieldContent}\n        />\n        <Battle\n          changeVisible={this.setVisibleStep}\n          activeStep={this.state.visibleStep}\n          content={this.state.battlefieldContent}\n          currElID={this.state.gameProcess.currentElementID}\n        />\n        <Rules changeVisible={this.setVisibleStep} activeStep={this.state.visibleStep} />\n        <Settings changeVisible={this.setVisibleStep} activeStep={this.state.visibleStep} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}